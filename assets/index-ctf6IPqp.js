import{D as j,n as T,T as W,i as G,t as k,k as z,Q as M,l as Y,V as J,B as ee,L as te,N as se,m as ie,o as re,q as ne}from"./main-BCTZHPJI.js";function ae(l){return!!l&&l.termType==="NamedNode"}function ue(l){return!!l&&l.termType==="BlankNode"}function le(l){return!!l&&l.termType==="Literal"}function oe(l){return!!l&&l.termType==="Variable"}function he(l){return!!l&&l.termType==="Quad"}function R(l){return!!l&&l.termType==="DefaultGraph"}function ce(l){return R(l.graph)}function de(l,e){return V({"":l.value||l},e)("")}function V(l,e){const t=Object.create(null);for(const i in l)s(i,l[i]);e=e||j;function s(i,r){if(typeof r=="string"){const n=Object.create(null);t[i]=a=>n[a]||(n[a]=e.namedNode(r+a))}else if(!(i in t))throw new Error(`Unknown prefix: ${i}`);return t[i]}return s}const fe=Object.freeze(Object.defineProperty({__proto__:null,inDefaultGraph:ce,isBlankNode:ue,isDefaultGraph:R,isLiteral:le,isNamedNode:ae,isQuad:he,isVariable:oe,prefix:de,prefixes:V},Symbol.toStringTag,{value:"Module"}));function P(l){return l.replace(/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&")}const _e=/^:?[^:?#]*(?:[?#]|$)|^file:|^[^:]*:\/*[^?#]+?\/(?:\.\.?(?:\/|$)|\/)/i,me=/^(?:(?:[^/?#]{3,}|\.?[^/?#.]\.?)(?:\/[^/?#]{3,}|\.?[^/?#.]\.?)*\/?)?(?:[?#]|$)/,q="./",pe="../",B="?",L="#";class S{constructor(e){this.base=e,this._baseLength=0,this._baseMatcher=null,this._pathReplacements=new Array(e.length+1)}static supports(e){return!_e.test(e)}_getBaseMatcher(){if(this._baseMatcher)return this._baseMatcher;if(!S.supports(this.base))return this._baseMatcher=/.^/;const e=/^[^:]*:\/*/.exec(this.base)[0],t=["^",P(e)],s=[],i=[],r=/[^/?#]*([/?#])/y;let n,a=0,u=0,o=r.lastIndex=e.length;for(;!a&&!u&&(n=r.exec(this.base));)n[1]===L?u=r.lastIndex-1:(t.push(P(n[0]),"(?:"),s.push(")?"),n[1]!==B?i.push(o=r.lastIndex):(a=o=r.lastIndex,u=this.base.indexOf(L,a),this._pathReplacements[a]=B));for(let h=0;h<i.length;h++)this._pathReplacements[i[h]]=pe.repeat(i.length-h-1);return this._pathReplacements[i[i.length-1]]=q,this._baseLength=u>0?u:this.base.length,t.push(P(this.base.substring(o,this._baseLength)),a?"(?:#|$)":"(?:[?#]|$)"),this._baseMatcher=new RegExp([...t,...s].join(""))}toRelative(e){const t=this._getBaseMatcher().exec(e);if(!t)return e;const s=t[0].length;if(s===this._baseLength&&s===e.length)return"";const i=this._pathReplacements[s];if(i){const r=e.substring(s);return i!==B&&!me.test(r)?e:i===q&&/^[^?#]/.test(r)?r:i+r}return e.substring(s-1)}}const N=j.defaultGraph(),{rdf:Ie,xsd:w}=T,D=/["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,K=/["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,be={"\\":"\\\\",'"':'\\"',"	":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"};class $ extends W{equals(e){return e===this}}class E{constructor(e,t){if(this._prefixRegex=/$0^/,e&&typeof e.write!="function"&&(t=e,e=null),t=t||{},this._lists=t.lists,e)this._outputStream=e,this._endStream=t.end===void 0?!0:!!t.end;else{let s="";this._outputStream={write(i,r,n){s+=i,n&&n()},end:i=>{i&&i(null,s)}},this._endStream=!0}this._subject=null,/triple|quad/i.test(t.format)?(this._lineMode=!0,this._writeQuad=this._writeQuadLine):(this._lineMode=!1,this._graph=N,this._prefixIRIs=Object.create(null),t.prefixes&&this.addPrefixes(t.prefixes),t.baseIRI&&(this._baseIri=new S(t.baseIRI)))}get _inDefaultGraph(){return N.equals(this._graph)}_write(e,t){this._outputStream.write(e,"utf8",t)}_writeQuad(e,t,s,i,r){try{i.equals(this._graph)||(this._write((this._subject===null?"":this._inDefaultGraph?`.
`:`
}
`)+(N.equals(i)?"":`${this._encodeIriOrBlank(i)} {
`)),this._graph=i,this._subject=null),e.equals(this._subject)?t.equals(this._predicate)?this._write(`, ${this._encodeObject(s)}`,r):this._write(`;
    ${this._encodePredicate(this._predicate=t)} ${this._encodeObject(s)}`,r):this._write(`${(this._subject===null?"":`.
`)+this._encodeSubject(this._subject=e)} ${this._encodePredicate(this._predicate=t)} ${this._encodeObject(s)}`,r)}catch(n){r&&r(n)}}_writeQuadLine(e,t,s,i,r){delete this._prefixMatch,this._write(this.quadToString(e,t,s,i),r)}quadToString(e,t,s,i){return`${this._encodeSubject(e)} ${this._encodeIriOrBlank(t)} ${this._encodeObject(s)}${i&&i.value?` ${this._encodeIriOrBlank(i)} .
`:` .
`}`}quadsToString(e){let t="";for(const s of e)t+=this.quadToString(s.subject,s.predicate,s.object,s.graph);return t}_encodeSubject(e){return e.termType==="Quad"?this._encodeQuad(e):this._encodeIriOrBlank(e)}_encodeIriOrBlank(e){if(e.termType!=="NamedNode")return this._lists&&e.value in this._lists&&(e=this.list(this._lists[e.value])),"id"in e?e.id:`_:${e.value}`;let t=e.value;this._baseIri&&(t=this._baseIri.toRelative(t)),D.test(t)&&(t=t.replace(K,C));const s=this._prefixRegex.exec(t);return s?s[1]?this._prefixIRIs[s[1]]+s[2]:t:`<${t}>`}_encodeLiteral(e){let t=e.value;if(D.test(t)&&(t=t.replace(K,C)),e.language)return`"${t}"@${e.language}`;if(this._lineMode){if(e.datatype.value===w.string)return`"${t}"`}else switch(e.datatype.value){case w.string:return`"${t}"`;case w.boolean:if(t==="true"||t==="false")return t;break;case w.integer:if(/^[+-]?\d+$/.test(t))return t;break;case w.decimal:if(/^[+-]?\d*\.\d+$/.test(t))return t;break;case w.double:if(/^[+-]?(?:\d+\.\d*|\.?\d+)[eE][+-]?\d+$/.test(t))return t;break}return`"${t}"^^${this._encodeIriOrBlank(e.datatype)}`}_encodePredicate(e){return e.value===Ie.type?"a":this._encodeIriOrBlank(e)}_encodeObject(e){switch(e.termType){case"Quad":return this._encodeQuad(e);case"Literal":return this._encodeLiteral(e);default:return this._encodeIriOrBlank(e)}}_encodeQuad({subject:e,predicate:t,object:s,graph:i}){return`<<${this._encodeSubject(e)} ${this._encodePredicate(t)} ${this._encodeObject(s)}${R(i)?"":` ${this._encodeIriOrBlank(i)}`}>>`}_blockedWrite(){throw new Error("Cannot write because the writer has been closed.")}addQuad(e,t,s,i,r){s===void 0?this._writeQuad(e.subject,e.predicate,e.object,e.graph,t):typeof i=="function"?this._writeQuad(e,t,s,N,i):this._writeQuad(e,t,s,i||N,r)}addQuads(e){for(let t=0;t<e.length;t++)this.addQuad(e[t])}addPrefix(e,t,s){const i={};i[e]=t,this.addPrefixes(i,s)}addPrefixes(e,t){if(!this._prefixIRIs)return t&&t();let s=!1;for(let i in e){let r=e[i];typeof r!="string"&&(r=r.value),s=!0,this._subject!==null&&(this._write(this._inDefaultGraph?`.
`:`
}
`),this._subject=null,this._graph=""),this._prefixIRIs[r]=i+=":",this._write(`@prefix ${i} <${r}>.
`)}if(s){let i="",r="";for(const n in this._prefixIRIs)i+=i?`|${n}`:n,r+=(r?"|":"")+this._prefixIRIs[n];i=P(i),this._prefixRegex=new RegExp(`^(?:${r})[^/]*$|^(${i})([_a-zA-Z0-9][\\-_a-zA-Z0-9]*)$`)}this._write(s?`
`:"",t)}blank(e,t){let s=e,i,r;switch(e===void 0?s=[]:e.termType?s=[{predicate:e,object:t}]:"length"in e||(s=[e]),r=s.length){case 0:return new $("[]");case 1:if(i=s[0],!(i.object instanceof $))return new $(`[ ${this._encodePredicate(i.predicate)} ${this._encodeObject(i.object)} ]`);default:let n="[";for(let a=0;a<r;a++)i=s[a],i.predicate.equals(e)?n+=`, ${this._encodeObject(i.object)}`:(n+=`${(a?`;
  `:`
  `)+this._encodePredicate(i.predicate)} ${this._encodeObject(i.object)}`,e=i.predicate);return new $(`${n}
]`)}}list(e){const t=e&&e.length||0,s=new Array(t);for(let i=0;i<t;i++)s[i]=this._encodeObject(e[i]);return new $(`(${s.join(" ")})`)}end(e){this._subject!==null&&(this._write(this._inDefaultGraph?`.
`:`
}
`),this._subject=null),this._write=this._blockedWrite;let t=e&&((s,i)=>{t=null,e(s,i)});if(this._endStream)try{return this._outputStream.end(t)}catch{}t&&t()}}function C(l){let e=be[l];return e===void 0&&(l.length===1?(e=l.charCodeAt(0).toString(16),e="\\u0000".substr(0,6-e.length)+e):(e=((l.charCodeAt(0)-55296)*1024+l.charCodeAt(1)+9216).toString(16),e="\\U00000000".substr(0,10-e.length)+e)),e}const A=Symbol("iter");function Q(l,e,t=4){if(t===0)return Object.assign(l,e);for(const s in e)l[s]=Q(l[s]||Object.create(null),e[s],t-1);return l}function H(l,e,t=4){let s=!1;for(const i in l)if(i in e){const r=t===0?null:H(l[i],e[i],t-1);if(r!==!1)s=s||Object.create(null),s[i]=r;else if(t===3)return!1}return s}function Z(l,e,t=4){let s=!1;for(const i in l)if(!(i in e))s=s||Object.create(null),s[i]=t===0?null:Q({},l[i],t-1);else if(t!==0){const r=Z(l[i],e[i],t-1);if(r!==!1)s=s||Object.create(null),s[i]=r;else if(t===3)return!1}return s}class X{constructor(e={}){this._id=1,this._ids=Object.create(null),this._ids[""]=1,this._entities=Object.create(null),this._entities[1]="",this._blankNodeIndex=0,this._factory=e.factory||j}_termFromId(e){if(e[0]==="."){const t=this._entities,s=e.split(".");return this._factory.quad(this._termFromId(t[s[1]]),this._termFromId(t[s[2]]),this._termFromId(t[s[3]]),s[4]&&this._termFromId(t[s[4]]))}return k(e,this._factory)}_termToNumericId(e){if(e.termType==="Quad"){const t=this._termToNumericId(e.subject),s=this._termToNumericId(e.predicate),i=this._termToNumericId(e.object);let r;return t&&s&&i&&(R(e.graph)||(r=this._termToNumericId(e.graph)))&&this._ids[r?`.${t}.${s}.${i}.${r}`:`.${t}.${s}.${i}`]}return this._ids[z(e)]}_termToNewNumericId(e){const t=e&&e.termType==="Quad"?`.${this._termToNewNumericId(e.subject)}.${this._termToNewNumericId(e.predicate)}.${this._termToNewNumericId(e.object)}${R(e.graph)?"":`.${this._termToNewNumericId(e.graph)}`}`:z(e);return this._ids[t]||(this._ids[this._entities[++this._id]=t]=this._id)}createBlankNode(e){let t,s;if(e)for(t=e=`_:${e}`,s=1;this._ids[t];)t=e+s++;else do t=`_:b${this._blankNodeIndex++}`;while(this._ids[t]);return this._ids[t]=++this._id,this._entities[this._id]=t,this._factory.blankNode(t.substr(2))}}class p{constructor(e,t){this._size=0,this._graphs=Object.create(null),!t&&e&&!e[0]&&typeof e.match!="function"&&(t=e,e=null),t=t||{},this._factory=t.factory||j,this._entityIndex=t.entityIndex||new X({factory:this._factory}),this._entities=this._entityIndex._entities,this._termFromId=this._entityIndex._termFromId.bind(this._entityIndex),this._termToNumericId=this._entityIndex._termToNumericId.bind(this._entityIndex),this._termToNewNumericId=this._entityIndex._termToNewNumericId.bind(this._entityIndex),e&&this.addAll(e)}get size(){let e=this._size;if(e!==null)return e;e=0;const t=this._graphs;let s,i;for(const r in t)for(const n in s=t[r].subjects)for(const a in i=s[n])e+=Object.keys(i[a]).length;return this._size=e}_addToIndex(e,t,s,i){const r=e[t]||(e[t]={}),n=r[s]||(r[s]={}),a=i in n;return a||(n[i]=null),!a}_removeFromIndex(e,t,s,i){const r=e[t],n=r[s];delete n[i];for(const a in n)return;delete r[s];for(const a in r)return;delete e[t]}*_findInIndex(e,t,s,i,r,n,a,u){let o,h,d;const f=this._entities,c=this._termFromId(f[u]),m={subject:null,predicate:null,object:null};t&&((o=e,e={})[t]=o[t]);for(const _ in e)if(h=e[_]){m[r]=this._termFromId(f[_]),s&&((o=h,h={})[s]=o[s]);for(const I in h)if(d=h[I]){m[n]=this._termFromId(f[I]);const x=i?i in d?[i]:[]:Object.keys(d);for(let v=0;v<x.length;v++)m[a]=this._termFromId(f[x[v]]),yield this._factory.quad(m.subject,m.predicate,m.object,c)}}}_loop(e,t){for(const s in e)t(s)}_loopByKey0(e,t,s){let i,r;if(i=e[t])for(r in i)s(r)}_loopByKey1(e,t,s){let i,r;for(i in e)r=e[i],r[t]&&s(i)}_loopBy2Keys(e,t,s,i){let r,n,a;if((r=e[t])&&(n=r[s]))for(a in n)i(a)}_countInIndex(e,t,s,i){let r=0,n,a,u;t&&((n=e,e={})[t]=n[t]);for(const o in e)if(a=e[o]){s&&((n=a,a={})[s]=n[s]);for(const h in a)(u=a[h])&&(i?i in u&&r++:r+=Object.keys(u).length)}return r}_getGraphs(e){return e=e===""?1:e&&(this._termToNumericId(e)||-1),typeof e!="number"?this._graphs:{[e]:this._graphs[e]}}_uniqueEntities(e){const t=Object.create(null);return s=>{s in t||(t[s]=!0,e(this._termFromId(this._entities[s],this._factory)))}}add(e){return this.addQuad(e),this}addQuad(e,t,s,i){t||(i=e.graph,s=e.object,t=e.predicate,e=e.subject),i=i?this._termToNewNumericId(i):1;let r=this._graphs[i];return r||(r=this._graphs[i]={subjects:{},predicates:{},objects:{}},Object.freeze(r)),e=this._termToNewNumericId(e),t=this._termToNewNumericId(t),s=this._termToNewNumericId(s),this._addToIndex(r.subjects,e,t,s)?(this._addToIndex(r.predicates,t,s,e),this._addToIndex(r.objects,s,e,t),this._size=null,!0):!1}addQuads(e){for(let t=0;t<e.length;t++)this.addQuad(e[t])}delete(e){return this.removeQuad(e),this}has(e,t,s,i){return e&&e.subject&&({subject:e,predicate:t,object:s,graph:i}=e),!this.readQuads(e,t,s,i).next().done}import(e){return e.on("data",t=>{this.addQuad(t)}),e}removeQuad(e,t,s,i){t||({subject:e,predicate:t,object:s,graph:i}=e),i=i?this._termToNumericId(i):1;const r=this._graphs;let n,a,u;if(!(e=e&&this._termToNumericId(e))||!(t=t&&this._termToNumericId(t))||!(s=s&&this._termToNumericId(s))||!(n=r[i])||!(a=n.subjects[e])||!(u=a[t])||!(s in u))return!1;this._removeFromIndex(n.subjects,e,t,s),this._removeFromIndex(n.predicates,t,s,e),this._removeFromIndex(n.objects,s,e,t),this._size!==null&&this._size--;for(e in n.subjects)return!0;return delete r[i],!0}removeQuads(e){for(let t=0;t<e.length;t++)this.removeQuad(e[t])}remove(e){return e.on("data",t=>{this.removeQuad(t)}),e}removeMatches(e,t,s,i){const r=new G.Readable({objectMode:!0}),n=this.readQuads(e,t,s,i);return r._read=a=>{for(;--a>=0;){const{done:u,value:o}=n.next();if(u){r.push(null);return}r.push(o)}},this.remove(r)}deleteGraph(e){return this.removeMatches(null,null,null,e)}getQuads(e,t,s,i){return[...this.readQuads(e,t,s,i)]}*readQuads(e,t,s,i){const r=this._getGraphs(i);let n,a,u,o;if(!(e&&!(a=this._termToNumericId(e))||t&&!(u=this._termToNumericId(t))||s&&!(o=this._termToNumericId(s))))for(const h in r)(n=r[h])&&(a?o?yield*this._findInIndex(n.objects,o,a,u,"object","subject","predicate",h):yield*this._findInIndex(n.subjects,a,u,null,"subject","predicate","object",h):u?yield*this._findInIndex(n.predicates,u,o,null,"predicate","object","subject",h):o?yield*this._findInIndex(n.objects,o,null,null,"object","subject","predicate",h):yield*this._findInIndex(n.subjects,null,null,null,"subject","predicate","object",h))}match(e,t,s,i){return new g(this,e,t,s,i,{entityIndex:this._entityIndex})}countQuads(e,t,s,i){const r=this._getGraphs(i);let n=0,a,u,o,h;if(e&&!(u=this._termToNumericId(e))||t&&!(o=this._termToNumericId(t))||s&&!(h=this._termToNumericId(s)))return 0;for(const d in r)(a=r[d])&&(e?s?n+=this._countInIndex(a.objects,h,u,o):n+=this._countInIndex(a.subjects,u,o,h):t?n+=this._countInIndex(a.predicates,o,h,u):n+=this._countInIndex(a.objects,h,u,o));return n}forEach(e,t,s,i,r){this.some(n=>(e(n,this),!1),t,s,i,r)}every(e,t,s,i,r){return!this.some(n=>!e(n,this),t,s,i,r)}some(e,t,s,i,r){for(const n of this.readQuads(t,s,i,r))if(e(n,this))return!0;return!1}getSubjects(e,t,s){const i=[];return this.forSubjects(r=>{i.push(r)},e,t,s),i}forSubjects(e,t,s,i){const r=this._getGraphs(i);let n,a,u;if(e=this._uniqueEntities(e),!(t&&!(a=this._termToNumericId(t))||s&&!(u=this._termToNumericId(s))))for(i in r)(n=r[i])&&(a?u?this._loopBy2Keys(n.predicates,a,u,e):this._loopByKey1(n.subjects,a,e):u?this._loopByKey0(n.objects,u,e):this._loop(n.subjects,e))}getPredicates(e,t,s){const i=[];return this.forPredicates(r=>{i.push(r)},e,t,s),i}forPredicates(e,t,s,i){const r=this._getGraphs(i);let n,a,u;if(e=this._uniqueEntities(e),!(t&&!(a=this._termToNumericId(t))||s&&!(u=this._termToNumericId(s))))for(i in r)(n=r[i])&&(a?u?this._loopBy2Keys(n.objects,u,a,e):this._loopByKey0(n.subjects,a,e):u?this._loopByKey1(n.predicates,u,e):this._loop(n.predicates,e))}getObjects(e,t,s){const i=[];return this.forObjects(r=>{i.push(r)},e,t,s),i}forObjects(e,t,s,i){const r=this._getGraphs(i);let n,a,u;if(e=this._uniqueEntities(e),!(t&&!(a=this._termToNumericId(t))||s&&!(u=this._termToNumericId(s))))for(i in r)(n=r[i])&&(a?u?this._loopBy2Keys(n.subjects,a,u,e):this._loopByKey1(n.objects,a,e):u?this._loopByKey0(n.predicates,u,e):this._loop(n.objects,e))}getGraphs(e,t,s){const i=[];return this.forGraphs(r=>{i.push(r)},e,t,s),i}forGraphs(e,t,s,i){for(const r in this._graphs)this.some(n=>(e(n.graph),!0),t,s,i,this._termFromId(this._entities[r]))}createBlankNode(e){return this._entityIndex.createBlankNode(e)}extractLists({remove:e=!1,ignoreErrors:t=!1}={}){const s={},i=t?(()=>!0):((a,u)=>{throw new Error(`${a.value} ${u}`)}),r=this.getQuads(null,T.rdf.rest,T.rdf.nil,null),n=e?[...r]:[];return r.forEach(a=>{const u=[];let o=!1,h,d;const f=a.graph;let c=a.subject;for(;c&&!o;){const m=this.getQuads(null,null,c,null),_=this.getQuads(c,null,null,null);let I,x=null,v=null,O=null;for(let y=0;y<_.length&&!o;y++)I=_[y],I.graph.equals(f)?h?o=i(c,"has non-list arcs out"):I.predicate.value===T.rdf.first?x?o=i(c,"has multiple rdf:first arcs"):n.push(x=I):I.predicate.value===T.rdf.rest?v?o=i(c,"has multiple rdf:rest arcs"):n.push(v=I):m.length?o=i(c,"can't be subject and object"):(h=I,d="subject"):o=i(c,"not confined to single graph");for(let y=0;y<m.length&&!o;++y)I=m[y],h?o=i(c,"can't have coreferences"):I.predicate.value===T.rdf.rest?O?o=i(c,"has incoming rdf:rest arcs"):O=I:(h=I,d="object");x?u.unshift(x.object):o=i(c,"has no list head"),c=O&&O.subject}o?e=!1:h&&(s[h[d].value]=u)}),e&&this.removeQuads(n),s}addAll(e){if(e instanceof g&&(e=e.filtered),Array.isArray(e))this.addQuads(e);else if(e instanceof p&&e._entityIndex===this._entityIndex)e._size!==0&&(this._graphs=Q(this._graphs,e._graphs),this._size=null);else for(const t of e)this.add(t);return this}contains(e){if(e instanceof g&&(e=e.filtered),e===this)return!0;if(!(e instanceof p)||this._entityIndex!==e._entityIndex)return e.every(o=>this.has(o));const t=this._graphs,s=e._graphs;let i,r,n,a,u;for(const o in s){if(!(i=t[o]))return!1;i=i.subjects;for(const h in r=s[o].subjects){if(!(n=i[h]))return!1;for(const d in a=r[h]){if(!(u=n[d]))return!1;for(const f in a[d])if(!(f in u))return!1}}}return!0}deleteMatches(e,t,s,i){for(const r of this.match(e,t,s,i))this.removeQuad(r);return this}difference(e){if(e&&e instanceof g&&(e=e.filtered),e===this)return new p({entityIndex:this._entityIndex});if(e instanceof p&&e._entityIndex===this._entityIndex){const t=new p({entityIndex:this._entityIndex}),s=Z(this._graphs,e._graphs);return s&&(t._graphs=s,t._size=null),t}return this.filter(t=>!e.has(t))}equals(e){return e instanceof g&&(e=e.filtered),e===this||this.size===e.size&&this.contains(e)}filter(e){const t=new p({entityIndex:this._entityIndex});for(const s of this)e(s,this)&&t.add(s);return t}intersection(e){if(e instanceof g&&(e=e.filtered),e===this){const t=new p({entityIndex:this._entityIndex});return t._graphs=Q(Object.create(null),this._graphs),t._size=this._size,t}else if(e instanceof p&&this._entityIndex===e._entityIndex){const t=new p({entityIndex:this._entityIndex}),s=H(e._graphs,this._graphs);return s&&(t._graphs=s,t._size=null),t}return this.filter(t=>e.has(t))}map(e){const t=new p({entityIndex:this._entityIndex});for(const s of this)t.add(e(s,this));return t}reduce(e,t){const s=this.readQuads();let i=t===void 0?s.next().value:t;for(const r of s)i=e(i,r,this);return i}toArray(){return this.getQuads()}toCanonical(){throw new Error("not implemented")}toStream(){return this.match()}toString(){return new E().quadsToString(this)}union(e){const t=new p({entityIndex:this._entityIndex});return t._graphs=Q(Object.create(null),this._graphs),t._size=this._size,t.addAll(e),t}*[Symbol.iterator](){yield*this.readQuads()}}function b(l,e,t=0){const s=e[t];if(s&&!(s in l))return!1;let i=!1;for(const r in s?{[s]:l[s]}:l){const n=t===2?null:b(l[r],e,t+1);n!==!1&&(i=i||Object.create(null),i[r]=n)}return i}class g extends G.Readable{constructor(e,t,s,i,r,n){super({objectMode:!0}),Object.assign(this,{n3Store:e,subject:t,predicate:s,object:i,graph:r,options:n})}get filtered(){if(!this._filtered){const{n3Store:e,graph:t,object:s,predicate:i,subject:r}=this,n=this._filtered=new p({factory:e._factory,entityIndex:this.options.entityIndex});let a,u,o;if(r&&!(a=n._termToNumericId(r))||i&&!(u=n._termToNumericId(i))||s&&!(o=n._termToNumericId(s)))return n;const h=e._getGraphs(t);for(const d in h){let f,c,m,_;(_=h[d])&&(!a&&u?(c=b(_.predicates,[u,o,a]))&&(f=b(_.subjects,[a,u,o]),m=b(_.objects,[o,a,u])):o?(m=b(_.objects,[o,a,u]))&&(f=b(_.subjects,[a,u,o]),c=b(_.predicates,[u,o,a])):(f=b(_.subjects,[a,u,o]))&&(c=b(_.predicates,[u,o,a]),m=b(_.objects,[o,a,u])),f&&(n._graphs[d]={subjects:f,predicates:c,objects:m}))}n._size=null}return this._filtered}get size(){return this.filtered.size}_read(e){e>0&&!this[A]&&(this[A]=this[Symbol.iterator]());const t=this[A];for(;--e>=0;){const{done:s,value:i}=t.next();if(s){this.push(null);return}this.push(i)}}addAll(e){return this.filtered.addAll(e)}contains(e){return this.filtered.contains(e)}deleteMatches(e,t,s,i){return this.filtered.deleteMatches(e,t,s,i)}difference(e){return this.filtered.difference(e)}equals(e){return this.filtered.equals(e)}every(e,t,s,i,r){return this.filtered.every(e,t,s,i,r)}filter(e){return this.filtered.filter(e)}forEach(e,t,s,i,r){return this.filtered.forEach(e,t,s,i,r)}import(e){return this.filtered.import(e)}intersection(e){return this.filtered.intersection(e)}map(e){return this.filtered.map(e)}some(e,t,s,i,r){return this.filtered.some(e,t,s,i,r)}toCanonical(){return this.filtered.toCanonical()}toStream(){return this._filtered?this._filtered.toStream():this.n3Store.match(this.subject,this.predicate,this.object,this.graph)}union(e){return this._filtered?this._filtered.union(e):this.n3Store.match(this.subject,this.predicate,this.object,this.graph).addAll(e)}toArray(){return this._filtered?this._filtered.toArray():this.n3Store.getQuads(this.subject,this.predicate,this.object,this.graph)}reduce(e,t){return this.filtered.reduce(e,t)}toString(){return new E().quadsToString(this)}add(e){return this.filtered.add(e)}delete(e){return this.filtered.delete(e)}has(e){return this.filtered.has(e)}match(e,t,s,i){return new g(this.filtered,e,t,s,i,this.options)}*[Symbol.iterator](){yield*this._filtered||this.n3Store.readQuads(this.subject,this.predicate,this.object,this.graph)}}class ge{dataset(e){return new p(e)}}function xe(l){const e=[];for(const{subject:t,object:s}of l.match(null,j.namedNode("http://www.w3.org/2000/10/swap/log#implies"),null,j.defaultGraph())){const i=[...l.match(null,null,null,t)],r=[...l.match(null,null,null,s)];e.push({premise:i,conclusion:r})}return e}class ye{constructor(e){this._store=e}_add(e,t,s,i,r){this._store._addToIndex(i.subjects,e,t,s)&&(this._store._addToIndex(i.predicates,t,s,e),this._store._addToIndex(i.objects,s,e,t),r())}_evaluatePremise(e,t,s,i=0){let r,n,a,u,o;const[h,d,f]=e.premise[i].value,c=t[e.premise[i].content],m=!(a=h.value);for(a in m?c:{[a]:c[a]})if(u=c[a]){m&&(h.value=Number(a)),r=!(a=d.value);for(a in r?u:{[a]:u[a]})if(o=u[a]){r&&(d.value=Number(a)),n=!(a=f.value);for(a in n?o:{[a]:o[a]})n&&(f.value=Number(a)),i===e.premise.length-1?e.conclusion.forEach(_=>{this._add(_.subject.value,_.predicate.value,_.object.value,t,()=>{s(_)})}):this._evaluatePremise(e,t,s,i+1);n&&(f.value=null)}r&&(d.value=null)}m&&(h.value=null)}_evaluateRules(e,t,s){for(let i=0;i<e.length;i++)this._evaluatePremise(e[i],t,s)}_reasonGraphNaive(e,t){const s=[];function i(a){a.next&&a.next.forEach(u=>{s.push([a.subject.value,a.predicate.value,a.object.value,u])})}const r=a=>{a.forEach(u=>{this._add(u.subject.value,u.predicate.value,u.object.value,t,()=>{i(u)})})};this._evaluateRules(e,t,i);let n;for(;(n=s.pop())!==void 0;){const[a,u,o,h]=n,d=h.basePremise.subject.value;d||(h.basePremise.subject.value=a);const f=h.basePremise.predicate.value;f||(h.basePremise.predicate.value=u);const c=h.basePremise.object.value;c||(h.basePremise.object.value=o),h.premise.length===0?r(h.conclusion):this._evaluatePremise(h,t,i),d||(h.basePremise.subject.value=null),f||(h.basePremise.predicate.value=null),c||(h.basePremise.object.value=null)}}_createRule({premise:e,conclusion:t}){const s={},i=n=>n.termType==="Variable"?s[n.value]=s[n.value]||{}:{value:this._store._termToNewNumericId(n)},r=n=>({subject:i(n.subject),predicate:i(n.predicate),object:i(n.object)});return{premise:e.map(n=>r(n)),conclusion:t.map(n=>r(n)),variables:Object.values(s)}}reason(e){Array.isArray(e)||(e=xe(e)),e=e.map(s=>this._createRule(s));for(const s of e)for(const i of e)for(let r=0;r<i.premise.length;r++){const n=i.premise[r];for(const a of s.conclusion){if(F(n.subject,a.subject)&&F(n.predicate,a.predicate)&&F(n.object,a.object)){const u=new Set,o=[];n.subject.value=n.subject.value||1,n.object.value=n.object.value||1,n.predicate.value=n.predicate.value||1;for(let h=0;h<i.premise.length;h++)h!==r&&o.push(U(i.premise[h],u));(a.next=a.next||[]).push({premise:o,conclusion:i.conclusion,basePremise:n})}i.variables.forEach(u=>{u.value=null})}}for(const s of e){const i=new Set;s.premise=s.premise.map(r=>U(r,i))}const t=this._store._getGraphs();for(const s in t)this._reasonGraphNaive(e,t[s]);this._store._size=null}}function U({subject:l,predicate:e,object:t},s){const i=l.value||s.has(l)||(s.add(l),!1),r=e.value||s.has(e)||(s.add(e),!1),n=t.value||s.has(t)||(s.add(t),!1);return!i&&r?{content:"predicates",value:[e,t,l]}:n?{content:"objects",value:[t,l,e]}:{content:"subjects",value:[l,e,t]}}function F(l,e){return l.value===null&&(l.value=e.value),l.value===e.value}class je extends G.Transform{constructor(e){super({encoding:"utf8",writableObjectMode:!0});const t=this._writer=new E({write:(s,i,r)=>{this.push(s),r&&r()},end:s=>{this.push(null),s&&s()}},e);this._transform=(s,i,r)=>{t.addQuad(s,r)},this._flush=s=>{t.end(s)}}import(e){return e.on("data",t=>{this.write(t)}),e.on("end",()=>{this.end()}),e.on("error",t=>{this.emit("error",t)}),e.on("prefix",(t,s)=>{this._writer.addPrefix(t,s)}),this}}const we={Lexer:ne,Parser:re,Writer:E,Store:p,StoreFactory:ge,EntityIndex:X,StreamParser:ie,StreamWriter:je,Util:fe,Reasoner:ye,BaseIRI:S,DataFactory:j,Term:W,NamedNode:se,Literal:te,BlankNode:ee,Variable:J,DefaultGraph:Y,Quad:M,Triple:M,termFromId:k,termToId:z};export{S as BaseIRI,ee as BlankNode,j as DataFactory,Y as DefaultGraph,X as EntityIndex,ne as Lexer,te as Literal,se as NamedNode,re as Parser,M as Quad,ye as Reasoner,p as Store,ge as StoreFactory,ie as StreamParser,je as StreamWriter,W as Term,M as Triple,fe as Util,J as Variable,E as Writer,we as default,xe as getRulesFromDataset,k as termFromId,z as termToId};
