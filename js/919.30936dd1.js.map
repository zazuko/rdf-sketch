{"version":3,"file":"js/919.30936dd1.js","mappings":"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","sources":["webpack://@zazuko/rdf-sketch/./node_modules/@rdfjs/parser-n3/index.js","webpack://@zazuko/rdf-sketch/./node_modules/@rdfjs/parser-n3/lib/ParserStream.js","webpack://@zazuko/rdf-sketch/./node_modules/@rdfjs/sink/index.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/add-abort-signal.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/compose.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/duplex.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/duplexify.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/from.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/legacy.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/operators.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/passthrough.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/readable.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/state.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/transform.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/utils.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/streams/writable.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/internal/validators.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/ours/browser.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/ours/errors.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/ours/primordials.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/ours/util.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/stream.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/node_modules/readable-stream/lib/stream/promises.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/src/IRIs.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/src/N3Lexer.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/src/N3Util.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/src/N3DataFactory.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/src/N3Parser.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/src/N3Writer.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/src/N3Store.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/src/N3StreamParser.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/src/N3StreamWriter.js","webpack://@zazuko/rdf-sketch/./node_modules/n3/src/index.js","webpack://@zazuko/rdf-sketch/./node_modules/queue-microtask/index.js","webpack://@zazuko/rdf-sketch/./node_modules/readable-to-readable/index.js"],"sourcesContent":["const ParserStream = require('./lib/ParserStream')\nconst Sink = require('@rdfjs/sink')\n\nclass Parser extends Sink {\n  constructor (options) {\n    super(ParserStream, options)\n  }\n}\n\nmodule.exports = Parser\n","const N3 = require('n3')\nconst rdf = require('@rdfjs/data-model')\nconst { finished } = require('readable-stream')\nconst ReadableToReadable = require('readable-to-readable')\n\nclass ParserStream extends ReadableToReadable {\n  constructor (input, { baseIRI = '', factory = rdf } = {}) {\n    const parser = new N3.StreamParser({ baseIRI, factory })\n\n    super(parser, { objectMode: true })\n\n    parser.on('prefix', (prefix, term) => {\n      this.emit('prefix', prefix, term)\n    })\n\n    parser.on('error', err => {\n      this.destroy(err)\n    })\n\n    finished(this, () => {\n      parser.end()\n    })\n\n    input.pipe(parser)\n  }\n}\n\nmodule.exports = ParserStream\n","class Sink {\n  constructor (Impl, options) {\n    this.Impl = Impl\n    this.options = options\n  }\n\n  import (input, options) {\n    const output = new this.Impl(input, Object.assign({}, this.options, options))\n\n    input.on('end', () => {\n      if (!output.readable) {\n        output.emit('end')\n      }\n    })\n\n    input.on('error', (err) => {\n      output.emit('error', err)\n    })\n\n    return output\n  }\n}\n\nmodule.exports = Sink\n","'use strict'\n\nconst { AbortError, codes } = require('../../ours/errors')\nconst eos = require('./end-of-stream')\nconst { ERR_INVALID_ARG_TYPE } = codes\n\n// This method is inlined here for readable-stream\n// It also does not allow for signal to not exist on the stream\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\nconst validateAbortSignal = (signal, name) => {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n}\nfunction isNodeStream(obj) {\n  return !!(obj && typeof obj.pipe === 'function')\n}\nmodule.exports.addAbortSignal = function addAbortSignal(signal, stream) {\n  validateAbortSignal(signal, 'signal')\n  if (!isNodeStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream', 'stream.Stream', stream)\n  }\n  return module.exports.addAbortSignalNoValidate(signal, stream)\n}\nmodule.exports.addAbortSignalNoValidate = function (signal, stream) {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    return stream\n  }\n  const onAbort = () => {\n    stream.destroy(\n      new AbortError(undefined, {\n        cause: signal.reason\n      })\n    )\n  }\n  if (signal.aborted) {\n    onAbort()\n  } else {\n    signal.addEventListener('abort', onAbort)\n    eos(stream, () => signal.removeEventListener('abort', onAbort))\n  }\n  return stream\n}\n","'use strict'\n\nconst { StringPrototypeSlice, SymbolIterator, TypedArrayPrototypeSet, Uint8Array } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { inspect } = require('../../ours/util')\nmodule.exports = class BufferList {\n  constructor() {\n    this.head = null\n    this.tail = null\n    this.length = 0\n  }\n  push(v) {\n    const entry = {\n      data: v,\n      next: null\n    }\n    if (this.length > 0) this.tail.next = entry\n    else this.head = entry\n    this.tail = entry\n    ++this.length\n  }\n  unshift(v) {\n    const entry = {\n      data: v,\n      next: this.head\n    }\n    if (this.length === 0) this.tail = entry\n    this.head = entry\n    ++this.length\n  }\n  shift() {\n    if (this.length === 0) return\n    const ret = this.head.data\n    if (this.length === 1) this.head = this.tail = null\n    else this.head = this.head.next\n    --this.length\n    return ret\n  }\n  clear() {\n    this.head = this.tail = null\n    this.length = 0\n  }\n  join(s) {\n    if (this.length === 0) return ''\n    let p = this.head\n    let ret = '' + p.data\n    while ((p = p.next) !== null) ret += s + p.data\n    return ret\n  }\n  concat(n) {\n    if (this.length === 0) return Buffer.alloc(0)\n    const ret = Buffer.allocUnsafe(n >>> 0)\n    let p = this.head\n    let i = 0\n    while (p) {\n      TypedArrayPrototypeSet(ret, p.data, i)\n      i += p.data.length\n      p = p.next\n    }\n    return ret\n  }\n\n  // Consumes a specified amount of bytes or characters from the buffered data.\n  consume(n, hasStrings) {\n    const data = this.head.data\n    if (n < data.length) {\n      // `slice` is the same for buffers and strings.\n      const slice = data.slice(0, n)\n      this.head.data = data.slice(n)\n      return slice\n    }\n    if (n === data.length) {\n      // First chunk is a perfect match.\n      return this.shift()\n    }\n    // Result spans more than one buffer.\n    return hasStrings ? this._getString(n) : this._getBuffer(n)\n  }\n  first() {\n    return this.head.data\n  }\n  *[SymbolIterator]() {\n    for (let p = this.head; p; p = p.next) {\n      yield p.data\n    }\n  }\n\n  // Consumes a specified amount of characters from the buffered data.\n  _getString(n) {\n    let ret = ''\n    let p = this.head\n    let c = 0\n    do {\n      const str = p.data\n      if (n > str.length) {\n        ret += str\n        n -= str.length\n      } else {\n        if (n === str.length) {\n          ret += str\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          ret += StringPrototypeSlice(str, 0, n)\n          this.head = p\n          p.data = StringPrototypeSlice(str, n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Consumes a specified amount of bytes from the buffered data.\n  _getBuffer(n) {\n    const ret = Buffer.allocUnsafe(n)\n    const retLen = n\n    let p = this.head\n    let c = 0\n    do {\n      const buf = p.data\n      if (n > buf.length) {\n        TypedArrayPrototypeSet(ret, buf, retLen - n)\n        n -= buf.length\n      } else {\n        if (n === buf.length) {\n          TypedArrayPrototypeSet(ret, buf, retLen - n)\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          TypedArrayPrototypeSet(ret, new Uint8Array(buf.buffer, buf.byteOffset, n), retLen - n)\n          this.head = p\n          p.data = buf.slice(n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [Symbol.for('nodejs.util.inspect.custom')](_, options) {\n    return inspect(this, {\n      ...options,\n      // Only inspect one level.\n      depth: 0,\n      // It should not recurse.\n      customInspect: false\n    })\n  }\n}\n","'use strict'\n\nconst { pipeline } = require('./pipeline')\nconst Duplex = require('./duplex')\nconst { destroyer } = require('./destroy')\nconst { isNodeStream, isReadable, isWritable } = require('./utils')\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_VALUE, ERR_MISSING_ARGS }\n} = require('../../ours/errors')\nmodule.exports = function compose(...streams) {\n  if (streams.length === 0) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n  if (streams.length === 1) {\n    return Duplex.from(streams[0])\n  }\n  const orgStreams = [...streams]\n  if (typeof streams[0] === 'function') {\n    streams[0] = Duplex.from(streams[0])\n  }\n  if (typeof streams[streams.length - 1] === 'function') {\n    const idx = streams.length - 1\n    streams[idx] = Duplex.from(streams[idx])\n  }\n  for (let n = 0; n < streams.length; ++n) {\n    if (!isNodeStream(streams[n])) {\n      // TODO(ronag): Add checks for non streams.\n      continue\n    }\n    if (n < streams.length - 1 && !isReadable(streams[n])) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be readable')\n    }\n    if (n > 0 && !isWritable(streams[n])) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be writable')\n    }\n  }\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    } else if (!readable && !writable) {\n      d.destroy()\n    }\n  }\n  const head = streams[0]\n  const tail = pipeline(streams, onfinished)\n  const writable = !!isWritable(head)\n  const readable = !!isReadable(tail)\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n  d = new Duplex({\n    // TODO (ronag): highWaterMark?\n    writableObjectMode: !!(head !== null && head !== undefined && head.writableObjectMode),\n    readableObjectMode: !!(tail !== null && tail !== undefined && tail.writableObjectMode),\n    writable,\n    readable\n  })\n  if (writable) {\n    d._write = function (chunk, encoding, callback) {\n      if (head.write(chunk, encoding)) {\n        callback()\n      } else {\n        ondrain = callback\n      }\n    }\n    d._final = function (callback) {\n      head.end()\n      onfinish = callback\n    }\n    head.on('drain', function () {\n      if (ondrain) {\n        const cb = ondrain\n        ondrain = null\n        cb()\n      }\n    })\n    tail.on('finish', function () {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n  if (readable) {\n    tail.on('readable', function () {\n      if (onreadable) {\n        const cb = onreadable\n        onreadable = null\n        cb()\n      }\n    })\n    tail.on('end', function () {\n      d.push(null)\n    })\n    d._read = function () {\n      while (true) {\n        const buf = tail.read()\n        if (buf === null) {\n          onreadable = d._read\n          return\n        }\n        if (!d.push(buf)) {\n          return\n        }\n      }\n    }\n  }\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n    onreadable = null\n    ondrain = null\n    onfinish = null\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      destroyer(tail, err)\n    }\n  }\n  return d\n}\n","'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst {\n  aggregateTwoErrors,\n  codes: { ERR_MULTIPLE_CALLBACK },\n  AbortError\n} = require('../../ours/errors')\nconst { Symbol } = require('../../ours/primordials')\nconst { kDestroyed, isDestroyed, isFinished, isServerRequest } = require('./utils')\nconst kDestroy = Symbol('kDestroy')\nconst kConstruct = Symbol('kConstruct')\nfunction checkError(err, w, r) {\n  if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err, cb) {\n  const r = this._readableState\n  const w = this._writableState\n  // With duplex streams we use the writable side for state.\n  const s = w || r\n  if ((w && w.destroyed) || (r && r.destroyed)) {\n    if (typeof cb === 'function') {\n      cb()\n    }\n    return this\n  }\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err, w, r)\n  if (w) {\n    w.destroyed = true\n  }\n  if (r) {\n    r.destroyed = true\n  }\n\n  // If still constructing then defer calling _destroy.\n  if (!s.constructed) {\n    this.once(kDestroy, function (er) {\n      _destroy(this, aggregateTwoErrors(er, err), cb)\n    })\n  } else {\n    _destroy(this, err, cb)\n  }\n  return this\n}\nfunction _destroy(self, err, cb) {\n  let called = false\n  function onDestroy(err) {\n    if (called) {\n      return\n    }\n    called = true\n    const r = self._readableState\n    const w = self._writableState\n    checkError(err, w, r)\n    if (w) {\n      w.closed = true\n    }\n    if (r) {\n      r.closed = true\n    }\n    if (typeof cb === 'function') {\n      cb(err)\n    }\n    if (err) {\n      process.nextTick(emitErrorCloseNT, self, err)\n    } else {\n      process.nextTick(emitCloseNT, self)\n    }\n  }\n  try {\n    self._destroy(err || null, onDestroy)\n  } catch (err) {\n    onDestroy(err)\n  }\n}\nfunction emitErrorCloseNT(self, err) {\n  emitErrorNT(self, err)\n  emitCloseNT(self)\n}\nfunction emitCloseNT(self) {\n  const r = self._readableState\n  const w = self._writableState\n  if (w) {\n    w.closeEmitted = true\n  }\n  if (r) {\n    r.closeEmitted = true\n  }\n  if ((w && w.emitClose) || (r && r.emitClose)) {\n    self.emit('close')\n  }\n}\nfunction emitErrorNT(self, err) {\n  const r = self._readableState\n  const w = self._writableState\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\n    return\n  }\n  if (w) {\n    w.errorEmitted = true\n  }\n  if (r) {\n    r.errorEmitted = true\n  }\n  self.emit('error', err)\n}\nfunction undestroy() {\n  const r = this._readableState\n  const w = this._writableState\n  if (r) {\n    r.constructed = true\n    r.closed = false\n    r.closeEmitted = false\n    r.destroyed = false\n    r.errored = null\n    r.errorEmitted = false\n    r.reading = false\n    r.ended = r.readable === false\n    r.endEmitted = r.readable === false\n  }\n  if (w) {\n    w.constructed = true\n    w.destroyed = false\n    w.closed = false\n    w.closeEmitted = false\n    w.errored = null\n    w.errorEmitted = false\n    w.finalCalled = false\n    w.prefinished = false\n    w.ended = w.writable === false\n    w.ending = w.writable === false\n    w.finished = w.writable === false\n  }\n}\nfunction errorOrDestroy(stream, err, sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState\n  const w = stream._writableState\n  if ((w && w.destroyed) || (r && r.destroyed)) {\n    return this\n  }\n  if ((r && r.autoDestroy) || (w && w.autoDestroy)) stream.destroy(err)\n  else if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT, stream, err)\n    } else {\n      emitErrorNT(stream, err)\n    }\n  }\n}\nfunction construct(stream, cb) {\n  if (typeof stream._construct !== 'function') {\n    return\n  }\n  const r = stream._readableState\n  const w = stream._writableState\n  if (r) {\n    r.constructed = false\n  }\n  if (w) {\n    w.constructed = false\n  }\n  stream.once(kConstruct, cb)\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return\n  }\n  process.nextTick(constructNT, stream)\n}\nfunction constructNT(stream) {\n  let called = false\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : new ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    const r = stream._readableState\n    const w = stream._writableState\n    const s = w || r\n    if (r) {\n      r.constructed = true\n    }\n    if (w) {\n      w.constructed = true\n    }\n    if (s.destroyed) {\n      stream.emit(kDestroy, err)\n    } else if (err) {\n      errorOrDestroy(stream, err, true)\n    } else {\n      process.nextTick(emitConstructNT, stream)\n    }\n  }\n  try {\n    stream._construct(onConstruct)\n  } catch (err) {\n    onConstruct(err)\n  }\n}\nfunction emitConstructNT(stream) {\n  stream.emit(kConstruct)\n}\nfunction isRequest(stream) {\n  return stream && stream.setHeader && typeof stream.abort === 'function'\n}\nfunction emitCloseLegacy(stream) {\n  stream.emit('close')\n}\nfunction emitErrorCloseLegacy(stream, err) {\n  stream.emit('error', err)\n  process.nextTick(emitCloseLegacy, stream)\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream, err) {\n  if (!stream || isDestroyed(stream)) {\n    return\n  }\n  if (!err && !isFinished(stream)) {\n    err = new AbortError()\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null\n    stream.destroy(err)\n  } else if (isRequest(stream)) {\n    stream.abort()\n  } else if (isRequest(stream.req)) {\n    stream.req.abort()\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err)\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close()\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy, stream, err)\n  } else {\n    process.nextTick(emitCloseLegacy, stream)\n  }\n  if (!stream.destroyed) {\n    stream[kDestroyed] = true\n  }\n}\nmodule.exports = {\n  construct,\n  destroyer,\n  destroy,\n  undestroy,\n  errorOrDestroy\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance, this class\n// prototypically inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict'\n\nconst {\n  ObjectDefineProperties,\n  ObjectGetOwnPropertyDescriptor,\n  ObjectKeys,\n  ObjectSetPrototypeOf\n} = require('../../ours/primordials')\nmodule.exports = Duplex\nconst Readable = require('./readable')\nconst Writable = require('./writable')\nObjectSetPrototypeOf(Duplex.prototype, Readable.prototype)\nObjectSetPrototypeOf(Duplex, Readable)\n{\n  const keys = ObjectKeys(Writable.prototype)\n  // Allow the keys array to be GC'ed.\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i]\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method]\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options)\n  Readable.call(this, options)\n  Writable.call(this, options)\n  if (options) {\n    this.allowHalfOpen = options.allowHalfOpen !== false\n    if (options.readable === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n    if (options.writable === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  } else {\n    this.allowHalfOpen = true\n  }\n}\nObjectDefineProperties(Duplex.prototype, {\n  writable: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writable')\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableHighWaterMark')\n  },\n  writableObjectMode: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableObjectMode')\n  },\n  writableBuffer: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableBuffer')\n  },\n  writableLength: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableLength')\n  },\n  writableFinished: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableFinished')\n  },\n  writableCorked: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableCorked')\n  },\n  writableEnded: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableEnded')\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableNeedDrain')\n  },\n  destroyed: {\n    __proto__: null,\n    get() {\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return false\n      }\n      return this._readableState.destroyed && this._writableState.destroyed\n    },\n    set(value) {\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value\n        this._writableState.destroyed = value\n      }\n    }\n  }\n})\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nDuplex.fromWeb = function (pair, options) {\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(pair, options)\n}\nDuplex.toWeb = function (duplex) {\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex)\n}\nlet duplexify\nDuplex.from = function (body) {\n  if (!duplexify) {\n    duplexify = require('./duplexify')\n  }\n  return duplexify(body, 'body')\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\n;('use strict')\nconst bufferModule = require('buffer')\nconst {\n  isReadable,\n  isWritable,\n  isIterable,\n  isNodeStream,\n  isReadableNodeStream,\n  isWritableNodeStream,\n  isDuplexNodeStream\n} = require('./utils')\nconst eos = require('./end-of-stream')\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_TYPE, ERR_INVALID_RETURN_VALUE }\n} = require('../../ours/errors')\nconst { destroyer } = require('./destroy')\nconst Duplex = require('./duplex')\nconst Readable = require('./readable')\nconst { createDeferredPromise } = require('../../ours/util')\nconst from = require('./from')\nconst Blob = globalThis.Blob || bufferModule.Blob\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst { FunctionPrototypeCall } = require('../../ours/primordials')\n\n// This is needed for pre node 17.\nclass Duplexify extends Duplex {\n  constructor(options) {\n    super(options)\n\n    // https://github.com/nodejs/node/pull/34385\n\n    if ((options === null || options === undefined ? undefined : options.readable) === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n    if ((options === null || options === undefined ? undefined : options.writable) === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  }\n}\nmodule.exports = function duplexify(body, name) {\n  if (isDuplexNodeStream(body)) {\n    return body\n  }\n  if (isReadableNodeStream(body)) {\n    return _duplexify({\n      readable: body\n    })\n  }\n  if (isWritableNodeStream(body)) {\n    return _duplexify({\n      writable: body\n    })\n  }\n  if (isNodeStream(body)) {\n    return _duplexify({\n      writable: false,\n      readable: false\n    })\n  }\n\n  // TODO: Webstreams\n  // if (isReadableStream(body)) {\n  //   return _duplexify({ readable: Readable.fromWeb(body) });\n  // }\n\n  // TODO: Webstreams\n  // if (isWritableStream(body)) {\n  //   return _duplexify({ writable: Writable.fromWeb(body) });\n  // }\n\n  if (typeof body === 'function') {\n    const { value, write, final, destroy } = fromAsyncGen(body)\n    if (isIterable(value)) {\n      return from(Duplexify, value, {\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        write,\n        final,\n        destroy\n      })\n    }\n    const then = value === null || value === undefined ? undefined : value.then\n    if (typeof then === 'function') {\n      let d\n      const promise = FunctionPrototypeCall(\n        then,\n        value,\n        (val) => {\n          if (val != null) {\n            throw new ERR_INVALID_RETURN_VALUE('nully', 'body', val)\n          }\n        },\n        (err) => {\n          destroyer(d, err)\n        }\n      )\n      return (d = new Duplexify({\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        readable: false,\n        write,\n        final(cb) {\n          final(async () => {\n            try {\n              await promise\n              process.nextTick(cb, null)\n            } catch (err) {\n              process.nextTick(cb, err)\n            }\n          })\n        },\n        destroy\n      }))\n    }\n    throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or AsyncFunction', name, value)\n  }\n  if (isBlob(body)) {\n    return duplexify(body.arrayBuffer())\n  }\n  if (isIterable(body)) {\n    return from(Duplexify, body, {\n      // TODO (ronag): highWaterMark?\n      objectMode: true,\n      writable: false\n    })\n  }\n\n  // TODO: Webstreams.\n  // if (\n  //   isReadableStream(body?.readable) &&\n  //   isWritableStream(body?.writable)\n  // ) {\n  //   return Duplexify.fromWeb(body);\n  // }\n\n  if (\n    typeof (body === null || body === undefined ? undefined : body.writable) === 'object' ||\n    typeof (body === null || body === undefined ? undefined : body.readable) === 'object'\n  ) {\n    const readable =\n      body !== null && body !== undefined && body.readable\n        ? isReadableNodeStream(body === null || body === undefined ? undefined : body.readable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.readable\n          : duplexify(body.readable)\n        : undefined\n    const writable =\n      body !== null && body !== undefined && body.writable\n        ? isWritableNodeStream(body === null || body === undefined ? undefined : body.writable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.writable\n          : duplexify(body.writable)\n        : undefined\n    return _duplexify({\n      readable,\n      writable\n    })\n  }\n  const then = body === null || body === undefined ? undefined : body.then\n  if (typeof then === 'function') {\n    let d\n    FunctionPrototypeCall(\n      then,\n      body,\n      (val) => {\n        if (val != null) {\n          d.push(val)\n        }\n        d.push(null)\n      },\n      (err) => {\n        destroyer(d, err)\n      }\n    )\n    return (d = new Duplexify({\n      objectMode: true,\n      writable: false,\n      read() {}\n    }))\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    name,\n    [\n      'Blob',\n      'ReadableStream',\n      'WritableStream',\n      'Stream',\n      'Iterable',\n      'AsyncIterable',\n      'Function',\n      '{ readable, writable } pair',\n      'Promise'\n    ],\n    body\n  )\n}\nfunction fromAsyncGen(fn) {\n  let { promise, resolve } = createDeferredPromise()\n  const ac = new AbortController()\n  const signal = ac.signal\n  const value = fn(\n    (async function* () {\n      while (true) {\n        const _promise = promise\n        promise = null\n        const { chunk, done, cb } = await _promise\n        process.nextTick(cb)\n        if (done) return\n        if (signal.aborted)\n          throw new AbortError(undefined, {\n            cause: signal.reason\n          })\n        ;({ promise, resolve } = createDeferredPromise())\n        yield chunk\n      }\n    })(),\n    {\n      signal\n    }\n  )\n  return {\n    value,\n    write(chunk, encoding, cb) {\n      const _resolve = resolve\n      resolve = null\n      _resolve({\n        chunk,\n        done: false,\n        cb\n      })\n    },\n    final(cb) {\n      const _resolve = resolve\n      resolve = null\n      _resolve({\n        done: true,\n        cb\n      })\n    },\n    destroy(err, cb) {\n      ac.abort()\n      cb(err)\n    }\n  }\n}\nfunction _duplexify(pair) {\n  const r = pair.readable && typeof pair.readable.read !== 'function' ? Readable.wrap(pair.readable) : pair.readable\n  const w = pair.writable\n  let readable = !!isReadable(r)\n  let writable = !!isWritable(w)\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    } else if (!readable && !writable) {\n      d.destroy()\n    }\n  }\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n  d = new Duplexify({\n    // TODO (ronag): highWaterMark?\n    readableObjectMode: !!(r !== null && r !== undefined && r.readableObjectMode),\n    writableObjectMode: !!(w !== null && w !== undefined && w.writableObjectMode),\n    readable,\n    writable\n  })\n  if (writable) {\n    eos(w, (err) => {\n      writable = false\n      if (err) {\n        destroyer(r, err)\n      }\n      onfinished(err)\n    })\n    d._write = function (chunk, encoding, callback) {\n      if (w.write(chunk, encoding)) {\n        callback()\n      } else {\n        ondrain = callback\n      }\n    }\n    d._final = function (callback) {\n      w.end()\n      onfinish = callback\n    }\n    w.on('drain', function () {\n      if (ondrain) {\n        const cb = ondrain\n        ondrain = null\n        cb()\n      }\n    })\n    w.on('finish', function () {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n  if (readable) {\n    eos(r, (err) => {\n      readable = false\n      if (err) {\n        destroyer(r, err)\n      }\n      onfinished(err)\n    })\n    r.on('readable', function () {\n      if (onreadable) {\n        const cb = onreadable\n        onreadable = null\n        cb()\n      }\n    })\n    r.on('end', function () {\n      d.push(null)\n    })\n    d._read = function () {\n      while (true) {\n        const buf = r.read()\n        if (buf === null) {\n          onreadable = d._read\n          return\n        }\n        if (!d.push(buf)) {\n          return\n        }\n      }\n    }\n  }\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n    onreadable = null\n    ondrain = null\n    onfinish = null\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      destroyer(w, err)\n      destroyer(r, err)\n    }\n  }\n  return d\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\nconst { AbortError, codes } = require('../../ours/errors')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_PREMATURE_CLOSE } = codes\nconst { kEmptyObject, once } = require('../../ours/util')\nconst { validateAbortSignal, validateFunction, validateObject } = require('../validators')\nconst { Promise } = require('../../ours/primordials')\nconst {\n  isClosed,\n  isReadable,\n  isReadableNodeStream,\n  isReadableFinished,\n  isReadableErrored,\n  isWritable,\n  isWritableNodeStream,\n  isWritableFinished,\n  isWritableErrored,\n  isNodeStream,\n  willEmitClose: _willEmitClose\n} = require('./utils')\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function'\n}\nconst nop = () => {}\nfunction eos(stream, options, callback) {\n  var _options$readable, _options$writable\n  if (arguments.length === 2) {\n    callback = options\n    options = kEmptyObject\n  } else if (options == null) {\n    options = kEmptyObject\n  } else {\n    validateObject(options, 'options')\n  }\n  validateFunction(callback, 'callback')\n  validateAbortSignal(options.signal, 'options.signal')\n  callback = once(callback)\n  const readable =\n    (_options$readable = options.readable) !== null && _options$readable !== undefined\n      ? _options$readable\n      : isReadableNodeStream(stream)\n  const writable =\n    (_options$writable = options.writable) !== null && _options$writable !== undefined\n      ? _options$writable\n      : isWritableNodeStream(stream)\n  if (!isNodeStream(stream)) {\n    // TODO: Webstreams.\n    throw new ERR_INVALID_ARG_TYPE('stream', 'Stream', stream)\n  }\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const onlegacyfinish = () => {\n    if (!stream.writable) {\n      onfinish()\n    }\n  }\n\n  // TODO (ronag): Improve soft detection to include core modules and\n  // common ecosystem modules that do properly emit 'close' but fail\n  // this generic check.\n  let willEmitClose =\n    _willEmitClose(stream) && isReadableNodeStream(stream) === readable && isWritableNodeStream(stream) === writable\n  let writableFinished = isWritableFinished(stream, false)\n  const onfinish = () => {\n    writableFinished = true\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n    if (willEmitClose && (!stream.readable || readable)) {\n      return\n    }\n    if (!readable || readableFinished) {\n      callback.call(stream)\n    }\n  }\n  let readableFinished = isReadableFinished(stream, false)\n  const onend = () => {\n    readableFinished = true\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n    if (willEmitClose && (!stream.writable || writable)) {\n      return\n    }\n    if (!writable || writableFinished) {\n      callback.call(stream)\n    }\n  }\n  const onerror = (err) => {\n    callback.call(stream, err)\n  }\n  let closed = isClosed(stream)\n  const onclose = () => {\n    closed = true\n    const errored = isWritableErrored(stream) || isReadableErrored(stream)\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream, errored)\n    }\n    if (readable && !readableFinished && isReadableNodeStream(stream, true)) {\n      if (!isReadableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n    if (writable && !writableFinished) {\n      if (!isWritableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n    callback.call(stream)\n  }\n  const onrequest = () => {\n    stream.req.on('finish', onfinish)\n  }\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish)\n    if (!willEmitClose) {\n      stream.on('abort', onclose)\n    }\n    if (stream.req) {\n      onrequest()\n    } else {\n      stream.on('request', onrequest)\n    }\n  } else if (writable && !wState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish)\n    stream.on('close', onlegacyfinish)\n  }\n\n  // Not all streams will emit 'close' after 'aborted'.\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\n    stream.on('aborted', onclose)\n  }\n  stream.on('end', onend)\n  stream.on('finish', onfinish)\n  if (options.error !== false) {\n    stream.on('error', onerror)\n  }\n  stream.on('close', onclose)\n  if (closed) {\n    process.nextTick(onclose)\n  } else if (\n    (wState !== null && wState !== undefined && wState.errorEmitted) ||\n    (rState !== null && rState !== undefined && rState.errorEmitted)\n  ) {\n    if (!willEmitClose) {\n      process.nextTick(onclose)\n    }\n  } else if (\n    !readable &&\n    (!willEmitClose || isReadable(stream)) &&\n    (writableFinished || isWritable(stream) === false)\n  ) {\n    process.nextTick(onclose)\n  } else if (\n    !writable &&\n    (!willEmitClose || isWritable(stream)) &&\n    (readableFinished || isReadable(stream) === false)\n  ) {\n    process.nextTick(onclose)\n  } else if (rState && stream.req && stream.aborted) {\n    process.nextTick(onclose)\n  }\n  const cleanup = () => {\n    callback = nop\n    stream.removeListener('aborted', onclose)\n    stream.removeListener('complete', onfinish)\n    stream.removeListener('abort', onclose)\n    stream.removeListener('request', onrequest)\n    if (stream.req) stream.req.removeListener('finish', onfinish)\n    stream.removeListener('end', onlegacyfinish)\n    stream.removeListener('close', onlegacyfinish)\n    stream.removeListener('finish', onfinish)\n    stream.removeListener('end', onend)\n    stream.removeListener('error', onerror)\n    stream.removeListener('close', onclose)\n  }\n  if (options.signal && !closed) {\n    const abort = () => {\n      // Keep it because cleanup removes it.\n      const endCallback = callback\n      cleanup()\n      endCallback.call(\n        stream,\n        new AbortError(undefined, {\n          cause: options.signal.reason\n        })\n      )\n    }\n    if (options.signal.aborted) {\n      process.nextTick(abort)\n    } else {\n      const originalCallback = callback\n      callback = once((...args) => {\n        options.signal.removeEventListener('abort', abort)\n        originalCallback.apply(stream, args)\n      })\n      options.signal.addEventListener('abort', abort)\n    }\n  }\n  return cleanup\n}\nfunction finished(stream, opts) {\n  return new Promise((resolve, reject) => {\n    eos(stream, opts, (err) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\nmodule.exports = eos\nmodule.exports.finished = finished\n","'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst { PromisePrototypeThen, SymbolAsyncIterator, SymbolIterator } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_NULL_VALUES } = require('../../ours/errors').codes\nfunction from(Readable, iterable, opts) {\n  let iterator\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true,\n      ...opts,\n      read() {\n        this.push(iterable)\n        this.push(null)\n      }\n    })\n  }\n  let isAsync\n  if (iterable && iterable[SymbolAsyncIterator]) {\n    isAsync = true\n    iterator = iterable[SymbolAsyncIterator]()\n  } else if (iterable && iterable[SymbolIterator]) {\n    isAsync = false\n    iterator = iterable[SymbolIterator]()\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable)\n  }\n  const readable = new Readable({\n    objectMode: true,\n    highWaterMark: 1,\n    // TODO(ronag): What options should be allowed?\n    ...opts\n  })\n\n  // Flag to protect against _read\n  // being called before last iteration completion.\n  let reading = false\n  readable._read = function () {\n    if (!reading) {\n      reading = true\n      next()\n    }\n  }\n  readable._destroy = function (error, cb) {\n    PromisePrototypeThen(\n      close(error),\n      () => process.nextTick(cb, error),\n      // nextTick is here in case cb throws\n      (e) => process.nextTick(cb, e || error)\n    )\n  }\n  async function close(error) {\n    const hadError = error !== undefined && error !== null\n    const hasThrow = typeof iterator.throw === 'function'\n    if (hadError && hasThrow) {\n      const { value, done } = await iterator.throw(error)\n      await value\n      if (done) {\n        return\n      }\n    }\n    if (typeof iterator.return === 'function') {\n      const { value } = await iterator.return()\n      await value\n    }\n  }\n  async function next() {\n    for (;;) {\n      try {\n        const { value, done } = isAsync ? await iterator.next() : iterator.next()\n        if (done) {\n          readable.push(null)\n        } else {\n          const res = value && typeof value.then === 'function' ? await value : value\n          if (res === null) {\n            reading = false\n            throw new ERR_STREAM_NULL_VALUES()\n          } else if (readable.push(res)) {\n            continue\n          } else {\n            reading = false\n          }\n        }\n      } catch (err) {\n        readable.destroy(err)\n      }\n      break\n    }\n  }\n  return readable\n}\nmodule.exports = from\n","'use strict'\n\nconst { ArrayIsArray, ObjectSetPrototypeOf } = require('../../ours/primordials')\nconst { EventEmitter: EE } = require('events')\nfunction Stream(opts) {\n  EE.call(this, opts)\n}\nObjectSetPrototypeOf(Stream.prototype, EE.prototype)\nObjectSetPrototypeOf(Stream, EE)\nStream.prototype.pipe = function (dest, options) {\n  const source = this\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause()\n    }\n  }\n  source.on('data', ondata)\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume()\n    }\n  }\n  dest.on('drain', ondrain)\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend)\n    source.on('close', onclose)\n  }\n  let didOnEnd = false\n  function onend() {\n    if (didOnEnd) return\n    didOnEnd = true\n    dest.end()\n  }\n  function onclose() {\n    if (didOnEnd) return\n    didOnEnd = true\n    if (typeof dest.destroy === 'function') dest.destroy()\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup()\n    if (EE.listenerCount(this, 'error') === 0) {\n      this.emit('error', er)\n    }\n  }\n  prependListener(source, 'error', onerror)\n  prependListener(dest, 'error', onerror)\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata)\n    dest.removeListener('drain', ondrain)\n    source.removeListener('end', onend)\n    source.removeListener('close', onclose)\n    source.removeListener('error', onerror)\n    dest.removeListener('error', onerror)\n    source.removeListener('end', cleanup)\n    source.removeListener('close', cleanup)\n    dest.removeListener('close', cleanup)\n  }\n  source.on('end', cleanup)\n  source.on('close', cleanup)\n  dest.on('close', cleanup)\n  dest.emit('pipe', source)\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest\n}\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn)\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn)\n  else if (ArrayIsArray(emitter._events[event])) emitter._events[event].unshift(fn)\n  else emitter._events[event] = [fn, emitter._events[event]]\n}\nmodule.exports = {\n  Stream,\n  prependListener\n}\n","'use strict'\n\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst {\n  codes: { ERR_INVALID_ARG_TYPE, ERR_MISSING_ARGS, ERR_OUT_OF_RANGE },\n  AbortError\n} = require('../../ours/errors')\nconst { validateAbortSignal, validateInteger, validateObject } = require('../validators')\nconst kWeakHandler = require('../../ours/primordials').Symbol('kWeak')\nconst { finished } = require('./end-of-stream')\nconst {\n  ArrayPrototypePush,\n  MathFloor,\n  Number,\n  NumberIsNaN,\n  Promise,\n  PromiseReject,\n  PromisePrototypeThen,\n  Symbol\n} = require('../../ours/primordials')\nconst kEmpty = Symbol('kEmpty')\nconst kEof = Symbol('kEof')\nfunction map(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  let concurrency = 1\n  if ((options === null || options === undefined ? undefined : options.concurrency) != null) {\n    concurrency = MathFloor(options.concurrency)\n  }\n  validateInteger(concurrency, 'concurrency', 1)\n  return async function* map() {\n    var _options$signal, _options$signal2\n    const ac = new AbortController()\n    const stream = this\n    const queue = []\n    const signal = ac.signal\n    const signalOpt = {\n      signal\n    }\n    const abort = () => ac.abort()\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal = options.signal) !== null &&\n      _options$signal !== undefined &&\n      _options$signal.aborted\n    ) {\n      abort()\n    }\n    options === null || options === undefined\n      ? undefined\n      : (_options$signal2 = options.signal) === null || _options$signal2 === undefined\n      ? undefined\n      : _options$signal2.addEventListener('abort', abort)\n    let next\n    let resume\n    let done = false\n    function onDone() {\n      done = true\n    }\n    async function pump() {\n      try {\n        for await (let val of stream) {\n          var _val\n          if (done) {\n            return\n          }\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n          try {\n            val = fn(val, signalOpt)\n          } catch (err) {\n            val = PromiseReject(err)\n          }\n          if (val === kEmpty) {\n            continue\n          }\n          if (typeof ((_val = val) === null || _val === undefined ? undefined : _val.catch) === 'function') {\n            val.catch(onDone)\n          }\n          queue.push(val)\n          if (next) {\n            next()\n            next = null\n          }\n          if (!done && queue.length && queue.length >= concurrency) {\n            await new Promise((resolve) => {\n              resume = resolve\n            })\n          }\n        }\n        queue.push(kEof)\n      } catch (err) {\n        const val = PromiseReject(err)\n        PromisePrototypeThen(val, undefined, onDone)\n        queue.push(val)\n      } finally {\n        var _options$signal3\n        done = true\n        if (next) {\n          next()\n          next = null\n        }\n        options === null || options === undefined\n          ? undefined\n          : (_options$signal3 = options.signal) === null || _options$signal3 === undefined\n          ? undefined\n          : _options$signal3.removeEventListener('abort', abort)\n      }\n    }\n    pump()\n    try {\n      while (true) {\n        while (queue.length > 0) {\n          const val = await queue[0]\n          if (val === kEof) {\n            return\n          }\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n          if (val !== kEmpty) {\n            yield val\n          }\n          queue.shift()\n          if (resume) {\n            resume()\n            resume = null\n          }\n        }\n        await new Promise((resolve) => {\n          next = resolve\n        })\n      }\n    } finally {\n      ac.abort()\n      done = true\n      if (resume) {\n        resume()\n        resume = null\n      }\n    }\n  }.call(this)\n}\nfunction asIndexedPairs(options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  return async function* asIndexedPairs() {\n    let index = 0\n    for await (const val of this) {\n      var _options$signal4\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal4 = options.signal) !== null &&\n        _options$signal4 !== undefined &&\n        _options$signal4.aborted\n      ) {\n        throw new AbortError({\n          cause: options.signal.reason\n        })\n      }\n      yield [index++, val]\n    }\n  }.call(this)\n}\nasync function some(fn, options = undefined) {\n  for await (const unused of filter.call(this, fn, options)) {\n    return true\n  }\n  return false\n}\nasync function every(fn, options = undefined) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\n  return !(await some.call(\n    this,\n    async (...args) => {\n      return !(await fn(...args))\n    },\n    options\n  ))\n}\nasync function find(fn, options) {\n  for await (const result of filter.call(this, fn, options)) {\n    return result\n  }\n  return undefined\n}\nasync function forEach(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  async function forEachFn(value, options) {\n    await fn(value, options)\n    return kEmpty\n  }\n  // eslint-disable-next-line no-unused-vars\n  for await (const unused of map.call(this, forEachFn, options));\n}\nfunction filter(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  async function filterFn(value, options) {\n    if (await fn(value, options)) {\n      return value\n    }\n    return kEmpty\n  }\n  return map.call(this, filterFn, options)\n}\n\n// Specific to provide better error to reduce since the argument is only\n// missing if the stream has no items in it - but the code is still appropriate\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\n  constructor() {\n    super('reduce')\n    this.message = 'Reduce of an empty stream requires an initial value'\n  }\n}\nasync function reduce(reducer, initialValue, options) {\n  var _options$signal5\n  if (typeof reducer !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('reducer', ['Function', 'AsyncFunction'], reducer)\n  }\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  let hasInitialValue = arguments.length > 1\n  if (\n    options !== null &&\n    options !== undefined &&\n    (_options$signal5 = options.signal) !== null &&\n    _options$signal5 !== undefined &&\n    _options$signal5.aborted\n  ) {\n    const err = new AbortError(undefined, {\n      cause: options.signal.reason\n    })\n    this.once('error', () => {}) // The error is already propagated\n    await finished(this.destroy(err))\n    throw err\n  }\n  const ac = new AbortController()\n  const signal = ac.signal\n  if (options !== null && options !== undefined && options.signal) {\n    const opts = {\n      once: true,\n      [kWeakHandler]: this\n    }\n    options.signal.addEventListener('abort', () => ac.abort(), opts)\n  }\n  let gotAnyItemFromStream = false\n  try {\n    for await (const value of this) {\n      var _options$signal6\n      gotAnyItemFromStream = true\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal6 = options.signal) !== null &&\n        _options$signal6 !== undefined &&\n        _options$signal6.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (!hasInitialValue) {\n        initialValue = value\n        hasInitialValue = true\n      } else {\n        initialValue = await reducer(initialValue, value, {\n          signal\n        })\n      }\n    }\n    if (!gotAnyItemFromStream && !hasInitialValue) {\n      throw new ReduceAwareErrMissingArgs()\n    }\n  } finally {\n    ac.abort()\n  }\n  return initialValue\n}\nasync function toArray(options) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  const result = []\n  for await (const val of this) {\n    var _options$signal7\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal7 = options.signal) !== null &&\n      _options$signal7 !== undefined &&\n      _options$signal7.aborted\n    ) {\n      throw new AbortError(undefined, {\n        cause: options.signal.reason\n      })\n    }\n    ArrayPrototypePush(result, val)\n  }\n  return result\n}\nfunction flatMap(fn, options) {\n  const values = map.call(this, fn, options)\n  return async function* flatMap() {\n    for await (const val of values) {\n      yield* val\n    }\n  }.call(this)\n}\nfunction toIntegerOrInfinity(number) {\n  // We coerce here to align with the spec\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\n  number = Number(number)\n  if (NumberIsNaN(number)) {\n    return 0\n  }\n  if (number < 0) {\n    throw new ERR_OUT_OF_RANGE('number', '>= 0', number)\n  }\n  return number\n}\nfunction drop(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  number = toIntegerOrInfinity(number)\n  return async function* drop() {\n    var _options$signal8\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal8 = options.signal) !== null &&\n      _options$signal8 !== undefined &&\n      _options$signal8.aborted\n    ) {\n      throw new AbortError()\n    }\n    for await (const val of this) {\n      var _options$signal9\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal9 = options.signal) !== null &&\n        _options$signal9 !== undefined &&\n        _options$signal9.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (number-- <= 0) {\n        yield val\n      }\n    }\n  }.call(this)\n}\nfunction take(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  number = toIntegerOrInfinity(number)\n  return async function* take() {\n    var _options$signal10\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal10 = options.signal) !== null &&\n      _options$signal10 !== undefined &&\n      _options$signal10.aborted\n    ) {\n      throw new AbortError()\n    }\n    for await (const val of this) {\n      var _options$signal11\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal11 = options.signal) !== null &&\n        _options$signal11 !== undefined &&\n        _options$signal11.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (number-- > 0) {\n        yield val\n      } else {\n        return\n      }\n    }\n  }.call(this)\n}\nmodule.exports.streamReturningOperators = {\n  asIndexedPairs,\n  drop,\n  filter,\n  flatMap,\n  map,\n  take\n}\nmodule.exports.promiseReturningOperators = {\n  every,\n  forEach,\n  reduce,\n  toArray,\n  some,\n  find\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict'\n\nconst { ObjectSetPrototypeOf } = require('../../ours/primordials')\nmodule.exports = PassThrough\nconst Transform = require('./transform')\nObjectSetPrototypeOf(PassThrough.prototype, Transform.prototype)\nObjectSetPrototypeOf(PassThrough, Transform)\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options)\n  Transform.call(this, options)\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk)\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\nconst { ArrayIsArray, Promise, SymbolAsyncIterator } = require('../../ours/primordials')\nconst eos = require('./end-of-stream')\nconst { once } = require('../../ours/util')\nconst destroyImpl = require('./destroy')\nconst Duplex = require('./duplex')\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED,\n    ERR_STREAM_PREMATURE_CLOSE\n  },\n  AbortError\n} = require('../../ours/errors')\nconst { validateFunction, validateAbortSignal } = require('../validators')\nconst { isIterable, isReadable, isReadableNodeStream, isNodeStream } = require('./utils')\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nlet PassThrough\nlet Readable\nfunction destroyer(stream, reading, writing) {\n  let finished = false\n  stream.on('close', () => {\n    finished = true\n  })\n  const cleanup = eos(\n    stream,\n    {\n      readable: reading,\n      writable: writing\n    },\n    (err) => {\n      finished = !err\n    }\n  )\n  return {\n    destroy: (err) => {\n      if (finished) return\n      finished = true\n      destroyImpl.destroyer(stream, err || new ERR_STREAM_DESTROYED('pipe'))\n    },\n    cleanup\n  }\n}\nfunction popCallback(streams) {\n  // Streams should never be an empty array. It should always contain at least\n  // a single stream. Therefore optimize for the average case instead of\n  // checking for length === 0 as well.\n  validateFunction(streams[streams.length - 1], 'streams[stream.length - 1]')\n  return streams.pop()\n}\nfunction makeAsyncIterable(val) {\n  if (isIterable(val)) {\n    return val\n  } else if (isReadableNodeStream(val)) {\n    // Legacy streams are not Iterable.\n    return fromReadable(val)\n  }\n  throw new ERR_INVALID_ARG_TYPE('val', ['Readable', 'Iterable', 'AsyncIterable'], val)\n}\nasync function* fromReadable(val) {\n  if (!Readable) {\n    Readable = require('./readable')\n  }\n  yield* Readable.prototype[SymbolAsyncIterator].call(val)\n}\nasync function pump(iterable, writable, finish, { end }) {\n  let error\n  let onresolve = null\n  const resume = (err) => {\n    if (err) {\n      error = err\n    }\n    if (onresolve) {\n      const callback = onresolve\n      onresolve = null\n      callback()\n    }\n  }\n  const wait = () =>\n    new Promise((resolve, reject) => {\n      if (error) {\n        reject(error)\n      } else {\n        onresolve = () => {\n          if (error) {\n            reject(error)\n          } else {\n            resolve()\n          }\n        }\n      }\n    })\n  writable.on('drain', resume)\n  const cleanup = eos(\n    writable,\n    {\n      readable: false\n    },\n    resume\n  )\n  try {\n    if (writable.writableNeedDrain) {\n      await wait()\n    }\n    for await (const chunk of iterable) {\n      if (!writable.write(chunk)) {\n        await wait()\n      }\n    }\n    if (end) {\n      writable.end()\n    }\n    await wait()\n    finish()\n  } catch (err) {\n    finish(error !== err ? aggregateTwoErrors(error, err) : err)\n  } finally {\n    cleanup()\n    writable.off('drain', resume)\n  }\n}\nfunction pipeline(...streams) {\n  return pipelineImpl(streams, once(popCallback(streams)))\n}\nfunction pipelineImpl(streams, callback, opts) {\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\n    streams = streams[0]\n  }\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n  const ac = new AbortController()\n  const signal = ac.signal\n  const outerSignal = opts === null || opts === undefined ? undefined : opts.signal\n\n  // Need to cleanup event listeners if last stream is readable\n  // https://github.com/nodejs/node/issues/35452\n  const lastStreamCleanup = []\n  validateAbortSignal(outerSignal, 'options.signal')\n  function abort() {\n    finishImpl(new AbortError())\n  }\n  outerSignal === null || outerSignal === undefined ? undefined : outerSignal.addEventListener('abort', abort)\n  let error\n  let value\n  const destroys = []\n  let finishCount = 0\n  function finish(err) {\n    finishImpl(err, --finishCount === 0)\n  }\n  function finishImpl(err, final) {\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\n      error = err\n    }\n    if (!error && !final) {\n      return\n    }\n    while (destroys.length) {\n      destroys.shift()(error)\n    }\n    outerSignal === null || outerSignal === undefined ? undefined : outerSignal.removeEventListener('abort', abort)\n    ac.abort()\n    if (final) {\n      if (!error) {\n        lastStreamCleanup.forEach((fn) => fn())\n      }\n      process.nextTick(callback, error, value)\n    }\n  }\n  let ret\n  for (let i = 0; i < streams.length; i++) {\n    const stream = streams[i]\n    const reading = i < streams.length - 1\n    const writing = i > 0\n    const end = reading || (opts === null || opts === undefined ? undefined : opts.end) !== false\n    const isLastStream = i === streams.length - 1\n    if (isNodeStream(stream)) {\n      if (end) {\n        const { destroy, cleanup } = destroyer(stream, reading, writing)\n        destroys.push(destroy)\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n\n      // Catch stream errors that occur after pipe/pump has completed.\n      function onError(err) {\n        if (err && err.name !== 'AbortError' && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n          finish(err)\n        }\n      }\n      stream.on('error', onError)\n      if (isReadable(stream) && isLastStream) {\n        lastStreamCleanup.push(() => {\n          stream.removeListener('error', onError)\n        })\n      }\n    }\n    if (i === 0) {\n      if (typeof stream === 'function') {\n        ret = stream({\n          signal\n        })\n        if (!isIterable(ret)) {\n          throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or Stream', 'source', ret)\n        }\n      } else if (isIterable(stream) || isReadableNodeStream(stream)) {\n        ret = stream\n      } else {\n        ret = Duplex.from(stream)\n      }\n    } else if (typeof stream === 'function') {\n      ret = makeAsyncIterable(ret)\n      ret = stream(ret, {\n        signal\n      })\n      if (reading) {\n        if (!isIterable(ret, true)) {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable', `transform[${i - 1}]`, ret)\n        }\n      } else {\n        var _ret\n        if (!PassThrough) {\n          PassThrough = require('./passthrough')\n        }\n\n        // If the last argument to pipeline is not a stream\n        // we must create a proxy stream so that pipeline(...)\n        // always returns a stream which can be further\n        // composed through `.pipe(stream)`.\n\n        const pt = new PassThrough({\n          objectMode: true\n        })\n\n        // Handle Promises/A+ spec, `then` could be a getter that throws on\n        // second use.\n        const then = (_ret = ret) === null || _ret === undefined ? undefined : _ret.then\n        if (typeof then === 'function') {\n          finishCount++\n          then.call(\n            ret,\n            (val) => {\n              value = val\n              if (val != null) {\n                pt.write(val)\n              }\n              if (end) {\n                pt.end()\n              }\n              process.nextTick(finish)\n            },\n            (err) => {\n              pt.destroy(err)\n              process.nextTick(finish, err)\n            }\n          )\n        } else if (isIterable(ret, true)) {\n          finishCount++\n          pump(ret, pt, finish, {\n            end\n          })\n        } else {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable or Promise', 'destination', ret)\n        }\n        ret = pt\n        const { destroy, cleanup } = destroyer(ret, false, true)\n        destroys.push(destroy)\n        if (isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n    } else if (isNodeStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount += 2\n        const cleanup = pipe(ret, stream, finish, {\n          end\n        })\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      } else if (isIterable(ret)) {\n        finishCount++\n        pump(ret, stream, finish, {\n          end\n        })\n      } else {\n        throw new ERR_INVALID_ARG_TYPE('val', ['Readable', 'Iterable', 'AsyncIterable'], ret)\n      }\n      ret = stream\n    } else {\n      ret = Duplex.from(stream)\n    }\n  }\n  if (\n    (signal !== null && signal !== undefined && signal.aborted) ||\n    (outerSignal !== null && outerSignal !== undefined && outerSignal.aborted)\n  ) {\n    process.nextTick(abort)\n  }\n  return ret\n}\nfunction pipe(src, dst, finish, { end }) {\n  let ended = false\n  dst.on('close', () => {\n    if (!ended) {\n      // Finish if the destination closes before the source has completed.\n      finish(new ERR_STREAM_PREMATURE_CLOSE())\n    }\n  })\n  src.pipe(dst, {\n    end\n  })\n  if (end) {\n    // Compat. Before node v10.12.0 stdio used to throw an error so\n    // pipe() did/does not end() stdio destinations.\n    // Now they allow it but \"secretly\" don't close the underlying fd.\n    src.once('end', () => {\n      ended = true\n      dst.end()\n    })\n  } else {\n    finish()\n  }\n  eos(\n    src,\n    {\n      readable: true,\n      writable: false\n    },\n    (err) => {\n      const rState = src._readableState\n      if (\n        err &&\n        err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\n        rState &&\n        rState.ended &&\n        !rState.errored &&\n        !rState.errorEmitted\n      ) {\n        // Some readable streams will emit 'close' before 'end'. However, since\n        // this is on the readable side 'end' should still be emitted if the\n        // stream has been ended and no error emitted. This should be allowed in\n        // favor of backwards compatibility. Since the stream is piped to a\n        // destination this should not result in any observable difference.\n        // We don't need to check if this is a writable premature close since\n        // eos will only fail with premature close on the reading side for\n        // duplex streams.\n        src.once('end', finish).once('error', finish)\n      } else {\n        finish(err)\n      }\n    }\n  )\n  return eos(\n    dst,\n    {\n      readable: false,\n      writable: true\n    },\n    finish\n  )\n}\nmodule.exports = {\n  pipelineImpl,\n  pipeline\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\nconst {\n  ArrayPrototypeIndexOf,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberParseInt,\n  ObjectDefineProperties,\n  ObjectKeys,\n  ObjectSetPrototypeOf,\n  Promise,\n  SafeSet,\n  SymbolAsyncIterator,\n  Symbol\n} = require('../../ours/primordials')\nmodule.exports = Readable\nReadable.ReadableState = ReadableState\nconst { EventEmitter: EE } = require('events')\nconst { Stream, prependListener } = require('./legacy')\nconst { Buffer } = require('buffer')\nconst { addAbortSignal } = require('./add-abort-signal')\nconst eos = require('./end-of-stream')\nlet debug = require('../../ours/util').debuglog('stream', (fn) => {\n  debug = fn\n})\nconst BufferList = require('./buffer_list')\nconst destroyImpl = require('./destroy')\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_OUT_OF_RANGE,\n    ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\n  }\n} = require('../../ours/errors')\nconst { validateObject } = require('../validators')\nconst kPaused = Symbol('kPaused')\nconst { StringDecoder } = require('string_decoder')\nconst from = require('./from')\nObjectSetPrototypeOf(Readable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Readable, Stream)\nconst nop = () => {}\nconst { errorOrDestroy } = destroyImpl\nfunction ReadableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex')\n\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.readableObjectMode)\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false)\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift().\n  this.buffer = new BufferList()\n  this.length = 0\n  this.pipes = []\n  this.flowing = null\n  this.ended = false\n  this.endEmitted = false\n  this.reading = false\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n  this.constructed = true\n\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true\n\n  // Whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false\n  this.emittedReadable = false\n  this.readableListening = false\n  this.resumeScheduled = false\n  this[kPaused] = null\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  this.autoDestroy = !options || options.autoDestroy !== false\n\n  // Has it been destroyed.\n  this.destroyed = false\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls, 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  this.errored = null\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8'\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null\n  this.multiAwaitDrain = false\n\n  // If true, a maybeReadMore has been scheduled.\n  this.readingMore = false\n  this.dataEmitted = false\n  this.decoder = null\n  this.encoding = null\n  if (options && options.encoding) {\n    this.decoder = new StringDecoder(options.encoding)\n    this.encoding = options.encoding\n  }\n}\nfunction Readable(options) {\n  if (!(this instanceof Readable)) return new Readable(options)\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n  this._readableState = new ReadableState(options, this, isDuplex)\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal && !isDuplex) addAbortSignal(options.signal, this)\n  }\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    if (this._readableState.needReadable) {\n      maybeReadMore(this, this._readableState)\n    }\n  })\n}\nReadable.prototype.destroy = destroyImpl.destroy\nReadable.prototype._undestroy = destroyImpl.undestroy\nReadable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\nReadable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, false)\n}\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, true)\n}\nfunction readableAddChunk(stream, chunk, encoding, addToFront) {\n  debug('readableAddChunk', chunk)\n  const state = stream._readableState\n  let err\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding\n      if (state.encoding !== encoding) {\n        if (addToFront && state.encoding) {\n          // When unshifting, if state.encoding is set, we have to save\n          // the string in the BufferList with the state encoding.\n          chunk = Buffer.from(chunk, encoding).toString(state.encoding)\n        } else {\n          chunk = Buffer.from(chunk, encoding)\n          encoding = ''\n        }\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = ''\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = ''\n    } else if (chunk != null) {\n      err = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n  if (err) {\n    errorOrDestroy(stream, err)\n  } else if (chunk === null) {\n    state.reading = false\n    onEofChunk(stream, state)\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\n    if (addToFront) {\n      if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT())\n      else if (state.destroyed || state.errored) return false\n      else addChunk(stream, state, chunk, true)\n    } else if (state.ended) {\n      errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF())\n    } else if (state.destroyed || state.errored) {\n      return false\n    } else {\n      state.reading = false\n      if (state.decoder && !encoding) {\n        chunk = state.decoder.write(chunk)\n        if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false)\n        else maybeReadMore(stream, state)\n      } else {\n        addChunk(stream, state, chunk, false)\n      }\n    }\n  } else if (!addToFront) {\n    state.reading = false\n    maybeReadMore(stream, state)\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0)\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync && stream.listenerCount('data') > 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n    state.dataEmitted = true\n    stream.emit('data', chunk)\n  } else {\n    // Update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length\n    if (addToFront) state.buffer.unshift(chunk)\n    else state.buffer.push(chunk)\n    if (state.needReadable) emitReadable(stream)\n  }\n  maybeReadMore(stream, state)\n}\nReadable.prototype.isPaused = function () {\n  const state = this._readableState\n  return state[kPaused] === true || state.flowing === false\n}\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  const decoder = new StringDecoder(enc)\n  this._readableState.decoder = decoder\n  // If setEncoding(null), decoder.encoding equals utf8.\n  this._readableState.encoding = this._readableState.decoder.encoding\n  const buffer = this._readableState.buffer\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = ''\n  for (const data of buffer) {\n    content += decoder.write(data)\n  }\n  buffer.clear()\n  if (content !== '') buffer.push(content)\n  this._readableState.length = content.length\n  return this\n}\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000\nfunction computeNewHighWaterMark(n) {\n  if (n > MAX_HWM) {\n    throw new ERR_OUT_OF_RANGE('size', '<= 1GiB', n)\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--\n    n |= n >>> 1\n    n |= n >>> 2\n    n |= n >>> 4\n    n |= n >>> 8\n    n |= n >>> 16\n    n++\n  }\n  return n\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || (state.length === 0 && state.ended)) return 0\n  if (state.objectMode) return 1\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if (state.flowing && state.length) return state.buffer.first().length\n    return state.length\n  }\n  if (n <= state.length) return n\n  return state.ended ? state.length : 0\n}\n\n// You can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n)\n  // Same as parseInt(undefined, 10), however V8 7.3 performance regressed\n  // in this scenario, so we are doing it manually.\n  if (n === undefined) {\n    n = NaN\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n, 10)\n  }\n  const state = this._readableState\n  const nOrig = n\n\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n)\n  if (n !== 0) state.emittedReadable = false\n\n  // If we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (\n    n === 0 &&\n    state.needReadable &&\n    ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)\n  ) {\n    debug('read: emitReadable', state.length, state.ended)\n    if (state.length === 0 && state.ended) endReadable(this)\n    else emitReadable(this)\n    return null\n  }\n  n = howMuchToRead(n, state)\n\n  // If we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this)\n    return null\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  let doRead = state.needReadable\n  debug('need readable', doRead)\n\n  // If we currently have less than the highWaterMark, then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true\n    debug('length less than watermark', doRead)\n  }\n\n  // However, if we've ended, then there's no point, if we're already\n  // reading, then it's unnecessary, if we're constructing we have to wait,\n  // and if we're destroyed or errored, then it's not allowed,\n  if (state.ended || state.reading || state.destroyed || state.errored || !state.constructed) {\n    doRead = false\n    debug('reading, ended or constructing', doRead)\n  } else if (doRead) {\n    debug('do read')\n    state.reading = true\n    state.sync = true\n    // If the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true\n\n    // Call internal read method\n    try {\n      this._read(state.highWaterMark)\n    } catch (err) {\n      errorOrDestroy(this, err)\n    }\n    state.sync = false\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state)\n  }\n  let ret\n  if (n > 0) ret = fromList(n, state)\n  else ret = null\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark\n    n = 0\n  } else {\n    state.length -= n\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this)\n  }\n  if (ret !== null && !state.errorEmitted && !state.closeEmitted) {\n    state.dataEmitted = true\n    this.emit('data', ret)\n  }\n  return ret\n}\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk')\n  if (state.ended) return\n  if (state.decoder) {\n    const chunk = state.decoder.end()\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk)\n      state.length += state.objectMode ? 1 : chunk.length\n    }\n  }\n  state.ended = true\n  if (state.sync) {\n    // If we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream)\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false\n    state.emittedReadable = true\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream)\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState\n  debug('emitReadable', state.needReadable, state.emittedReadable)\n  state.needReadable = false\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing)\n    state.emittedReadable = true\n    process.nextTick(emitReadable_, stream)\n  }\n}\nfunction emitReadable_(stream) {\n  const state = stream._readableState\n  debug('emitReadable_', state.destroyed, state.length, state.ended)\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\n    stream.emit('readable')\n    state.emittedReadable = false\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark\n  flow(stream)\n}\n\n// At this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore && state.constructed) {\n    state.readingMore = true\n    process.nextTick(maybeReadMore_, stream, state)\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (\n    !state.reading &&\n    !state.ended &&\n    (state.length < state.highWaterMark || (state.flowing && state.length === 0))\n  ) {\n    const len = state.length\n    debug('maybeReadMore read 0')\n    stream.read(0)\n    if (len === state.length)\n      // Didn't get any data, stop spinning.\n      break\n  }\n  state.readingMore = false\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()')\n}\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  const src = this\n  const state = this._readableState\n  if (state.pipes.length === 1) {\n    if (!state.multiAwaitDrain) {\n      state.multiAwaitDrain = true\n      state.awaitDrainWriters = new SafeSet(state.awaitDrainWriters ? [state.awaitDrainWriters] : [])\n    }\n  }\n  state.pipes.push(dest)\n  debug('pipe count=%d opts=%j', state.pipes.length, pipeOpts)\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr\n  const endFn = doEnd ? onend : unpipe\n  if (state.endEmitted) process.nextTick(endFn)\n  else src.once('end', endFn)\n  dest.on('unpipe', onunpipe)\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe')\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true\n        cleanup()\n      }\n    }\n  }\n  function onend() {\n    debug('onend')\n    dest.end()\n  }\n  let ondrain\n  let cleanedUp = false\n  function cleanup() {\n    debug('cleanup')\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close', onclose)\n    dest.removeListener('finish', onfinish)\n    if (ondrain) {\n      dest.removeListener('drain', ondrain)\n    }\n    dest.removeListener('error', onerror)\n    dest.removeListener('unpipe', onunpipe)\n    src.removeListener('end', onend)\n    src.removeListener('end', unpipe)\n    src.removeListener('data', ondata)\n    cleanedUp = true\n\n    // If the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters && (!dest._writableState || dest._writableState.needDrain)) ondrain()\n  }\n  function pause() {\n    // If the user unpiped during `dest.write()`, it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response, pause', 0)\n        state.awaitDrainWriters = dest\n        state.multiAwaitDrain = false\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response, pause', state.awaitDrainWriters.size)\n        state.awaitDrainWriters.add(dest)\n      }\n      src.pause()\n    }\n    if (!ondrain) {\n      // When the dest drains, it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow(), but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src, dest)\n      dest.on('drain', ondrain)\n    }\n  }\n  src.on('data', ondata)\n  function ondata(chunk) {\n    debug('ondata')\n    const ret = dest.write(chunk)\n    debug('dest.write', ret)\n    if (ret === false) {\n      pause()\n    }\n  }\n\n  // If the dest has an error, then stop piping into it.\n  // However, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er)\n    unpipe()\n    dest.removeListener('error', onerror)\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest, er)\n      } else {\n        dest.emit('error', er)\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror)\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish)\n    unpipe()\n  }\n  dest.once('close', onclose)\n  function onfinish() {\n    debug('onfinish')\n    dest.removeListener('close', onclose)\n    unpipe()\n  }\n  dest.once('finish', onfinish)\n  function unpipe() {\n    debug('unpipe')\n    src.unpipe(dest)\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe', src)\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    if (state.flowing) {\n      pause()\n    }\n  } else if (!state.flowing) {\n    debug('pipe resume')\n    src.resume()\n  }\n  return dest\n}\nfunction pipeOnDrain(src, dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState\n\n    // `ondrain` will call directly,\n    // `this` maybe not a reference to dest,\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain', 1)\n      state.awaitDrainWriters = null\n    } else if (state.multiAwaitDrain) {\n      debug('pipeOnDrain', state.awaitDrainWriters.size)\n      state.awaitDrainWriters.delete(dest)\n    }\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) && src.listenerCount('data')) {\n      src.resume()\n    }\n  }\n}\nReadable.prototype.unpipe = function (dest) {\n  const state = this._readableState\n  const unpipeInfo = {\n    hasUnpiped: false\n  }\n\n  // If we're not piping anywhere, then do nothing.\n  if (state.pipes.length === 0) return this\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes\n    state.pipes = []\n    this.pause()\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      })\n    return this\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes, dest)\n  if (index === -1) return this\n  state.pipes.splice(index, 1)\n  if (state.pipes.length === 0) this.pause()\n  dest.emit('unpipe', this, unpipeInfo)\n  return this\n}\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function (ev, fn) {\n  const res = Stream.prototype.on.call(this, ev, fn)\n  const state = this._readableState\n  if (ev === 'data') {\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if (state.flowing !== false) this.resume()\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true\n      state.flowing = false\n      state.emittedReadable = false\n      debug('on readable', state.length, state.reading)\n      if (state.length) {\n        emitReadable(this)\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this)\n      }\n    }\n  }\n  return res\n}\nReadable.prototype.addListener = Readable.prototype.on\nReadable.prototype.removeListener = function (ev, fn) {\n  const res = Stream.prototype.removeListener.call(this, ev, fn)\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n  return res\n}\nReadable.prototype.off = Readable.prototype.removeListener\nReadable.prototype.removeAllListeners = function (ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this, arguments)\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n  return res\n}\nfunction updateReadableListening(self) {\n  const state = self._readableState\n  state.readableListening = self.listenerCount('readable') > 0\n  if (state.resumeScheduled && state[kPaused] === false) {\n    // Flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true\n\n    // Crude way to check if we should resume.\n  } else if (self.listenerCount('data') > 0) {\n    self.resume()\n  } else if (!state.readableListening) {\n    state.flowing = null\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0')\n  self.read(0)\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  const state = this._readableState\n  if (!state.flowing) {\n    debug('resume')\n    // We flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume().\n    state.flowing = !state.readableListening\n    resume(this, state)\n  }\n  state[kPaused] = false\n  return this\n}\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true\n    process.nextTick(resume_, stream, state)\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading)\n  if (!state.reading) {\n    stream.read(0)\n  }\n  state.resumeScheduled = false\n  stream.emit('resume')\n  flow(stream)\n  if (state.flowing && !state.reading) stream.read(0)\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing)\n  if (this._readableState.flowing !== false) {\n    debug('pause')\n    this._readableState.flowing = false\n    this.emit('pause')\n  }\n  this._readableState[kPaused] = true\n  return this\n}\nfunction flow(stream) {\n  const state = stream._readableState\n  debug('flow', state.flowing)\n  while (state.flowing && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  let paused = false\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method, e.g. Readable.wrap(stream).\n\n  stream.on('data', (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true\n      stream.pause()\n    }\n  })\n  stream.on('end', () => {\n    this.push(null)\n  })\n  stream.on('error', (err) => {\n    errorOrDestroy(this, err)\n  })\n  stream.on('close', () => {\n    this.destroy()\n  })\n  stream.on('destroy', () => {\n    this.destroy()\n  })\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false\n      stream.resume()\n    }\n  }\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream)\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j]\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream)\n    }\n  }\n  return this\n}\nReadable.prototype[SymbolAsyncIterator] = function () {\n  return streamToAsyncIterator(this)\n}\nReadable.prototype.iterator = function (options) {\n  if (options !== undefined) {\n    validateObject(options, 'options')\n  }\n  return streamToAsyncIterator(this, options)\n}\nfunction streamToAsyncIterator(stream, options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream, {\n      objectMode: true\n    })\n  }\n  const iter = createAsyncIterator(stream, options)\n  iter.stream = stream\n  return iter\n}\nasync function* createAsyncIterator(stream, options) {\n  let callback = nop\n  function next(resolve) {\n    if (this === stream) {\n      callback()\n      callback = nop\n    } else {\n      callback = resolve\n    }\n  }\n  stream.on('readable', next)\n  let error\n  const cleanup = eos(\n    stream,\n    {\n      writable: false\n    },\n    (err) => {\n      error = err ? aggregateTwoErrors(error, err) : null\n      callback()\n      callback = nop\n    }\n  )\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read()\n      if (chunk !== null) {\n        yield chunk\n      } else if (error) {\n        throw error\n      } else if (error === null) {\n        return\n      } else {\n        await new Promise(next)\n      }\n    }\n  } catch (err) {\n    error = aggregateTwoErrors(error, err)\n    throw error\n  } finally {\n    if (\n      (error || (options === null || options === undefined ? undefined : options.destroyOnReturn) !== false) &&\n      (error === undefined || stream._readableState.autoDestroy)\n    ) {\n      destroyImpl.destroyer(stream, null)\n    } else {\n      stream.off('readable', next)\n      cleanup()\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype, {\n  readable: {\n    __proto__: null,\n    get() {\n      const r = this._readableState\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted && !r.endEmitted\n    },\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val\n      }\n    }\n  },\n  readableDidRead: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.dataEmitted\n    }\n  },\n  readableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      )\n    }\n  },\n  readableHighWaterMark: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.highWaterMark\n    }\n  },\n  readableBuffer: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState && this._readableState.buffer\n    }\n  },\n  readableFlowing: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.flowing\n    },\n    set: function (state) {\n      if (this._readableState) {\n        this._readableState.flowing = state\n      }\n    }\n  },\n  readableLength: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState.length\n    }\n  },\n  readableObjectMode: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.objectMode : false\n    }\n  },\n  readableEncoding: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.encoding : null\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.errored : null\n    }\n  },\n  closed: {\n    __proto__: null,\n    get() {\n      return this._readableState ? this._readableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.destroyed : false\n    },\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return\n      }\n\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value\n    }\n  },\n  readableEnded: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false\n    }\n  }\n})\nObjectDefineProperties(ReadableState.prototype, {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null,\n    get() {\n      return this.pipes.length\n    }\n  },\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null,\n    get() {\n      return this[kPaused] !== false\n    },\n    set(value) {\n      this[kPaused] = !!value\n    }\n  }\n})\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered.\n  if (state.length === 0) return null\n  let ret\n  if (state.objectMode) ret = state.buffer.shift()\n  else if (!n || n >= state.length) {\n    // Read it all, truncate the list.\n    if (state.decoder) ret = state.buffer.join('')\n    else if (state.buffer.length === 1) ret = state.buffer.first()\n    else ret = state.buffer.concat(state.length)\n    state.buffer.clear()\n  } else {\n    // read part of list.\n    ret = state.buffer.consume(n, state.decoder)\n  }\n  return ret\n}\nfunction endReadable(stream) {\n  const state = stream._readableState\n  debug('endReadable', state.endEmitted)\n  if (!state.endEmitted) {\n    state.ended = true\n    process.nextTick(endReadableNT, state, stream)\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length)\n\n  // Check that we didn't get one last unshift.\n  if (!state.errored && !state.closeEmitted && !state.endEmitted && state.length === 0) {\n    state.endEmitted = true\n    stream.emit('end')\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT, stream)\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState\n      const autoDestroy =\n        !wState ||\n        (wState.autoDestroy &&\n          // We don't expect the writable to ever 'finish'\n          // if writable is explicitly set to false.\n          (wState.finished || wState.writable === false))\n      if (autoDestroy) {\n        stream.destroy()\n      }\n    }\n  }\n}\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded && !stream.destroyed\n  if (writable) {\n    stream.end()\n  }\n}\nReadable.from = function (iterable, opts) {\n  return from(Readable, iterable, opts)\n}\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nReadable.fromWeb = function (readableStream, options) {\n  return lazyWebStreams().newStreamReadableFromReadableStream(readableStream, options)\n}\nReadable.toWeb = function (streamReadable, options) {\n  return lazyWebStreams().newReadableStreamFromStreamReadable(streamReadable, options)\n}\nReadable.wrap = function (src, options) {\n  var _ref, _src$readableObjectMo\n  return new Readable({\n    objectMode:\n      (_ref =\n        (_src$readableObjectMo = src.readableObjectMode) !== null && _src$readableObjectMo !== undefined\n          ? _src$readableObjectMo\n          : src.objectMode) !== null && _ref !== undefined\n        ? _ref\n        : true,\n    ...options,\n    destroy(err, callback) {\n      destroyImpl.destroyer(src, err)\n      callback(err)\n    }\n  }).wrap(src)\n}\n","'use strict'\n\nconst { MathFloor, NumberIsInteger } = require('../../ours/primordials')\nconst { ERR_INVALID_ARG_VALUE } = require('../../ours/errors').codes\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null\n}\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 16 * 1024\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  const hwm = highWaterMarkFrom(options, isDuplex, duplexKey)\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark'\n      throw new ERR_INVALID_ARG_VALUE(name, hwm)\n    }\n    return MathFloor(hwm)\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode)\n}\nmodule.exports = {\n  getHighWaterMark,\n  getDefaultHighWaterMark\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict'\n\nconst { ObjectSetPrototypeOf, Symbol } = require('../../ours/primordials')\nmodule.exports = Transform\nconst { ERR_METHOD_NOT_IMPLEMENTED } = require('../../ours/errors').codes\nconst Duplex = require('./duplex')\nconst { getHighWaterMark } = require('./state')\nObjectSetPrototypeOf(Transform.prototype, Duplex.prototype)\nObjectSetPrototypeOf(Transform, Duplex)\nconst kCallback = Symbol('kCallback')\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options)\n\n  // TODO (ronag): This should preferably always be\n  // applied but would be semver-major. Or even better;\n  // make Transform a Readable with the Writable interface.\n  const readableHighWaterMark = options ? getHighWaterMark(this, options, 'readableHighWaterMark', true) : null\n  if (readableHighWaterMark === 0) {\n    // A Duplex will buffer both on the writable and readable side while\n    // a Transform just wants to buffer hwm number of elements. To avoid\n    // buffering twice we disable buffering on the writable side.\n    options = {\n      ...options,\n      highWaterMark: null,\n      readableHighWaterMark,\n      // TODO (ronag): 0 is not optimal since we have\n      // a \"bug\" where we check needDrain before calling _write and not after.\n      // Refs: https://github.com/nodejs/node/pull/32887\n      // Refs: https://github.com/nodejs/node/pull/35941\n      writableHighWaterMark: options.writableHighWaterMark || 0\n    }\n  }\n  Duplex.call(this, options)\n\n  // We have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false\n  this[kCallback] = null\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform\n    if (typeof options.flush === 'function') this._flush = options.flush\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  // Backwards compat. Some Transform streams incorrectly implement _final\n  // instead of or in addition to _flush. By using 'prefinish' instead of\n  // implementing _final we continue supporting this unfortunate use case.\n  this.on('prefinish', prefinish)\n}\nfunction final(cb) {\n  if (typeof this._flush === 'function' && !this.destroyed) {\n    this._flush((er, data) => {\n      if (er) {\n        if (cb) {\n          cb(er)\n        } else {\n          this.destroy(er)\n        }\n        return\n      }\n      if (data != null) {\n        this.push(data)\n      }\n      this.push(null)\n      if (cb) {\n        cb()\n      }\n    })\n  } else {\n    this.push(null)\n    if (cb) {\n      cb()\n    }\n  }\n}\nfunction prefinish() {\n  if (this._final !== final) {\n    final.call(this)\n  }\n}\nTransform.prototype._final = final\nTransform.prototype._transform = function (chunk, encoding, callback) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()')\n}\nTransform.prototype._write = function (chunk, encoding, callback) {\n  const rState = this._readableState\n  const wState = this._writableState\n  const length = rState.length\n  this._transform(chunk, encoding, (err, val) => {\n    if (err) {\n      callback(err)\n      return\n    }\n    if (val != null) {\n      this.push(val)\n    }\n    if (\n      wState.ended ||\n      // Backwards compat.\n      length === rState.length ||\n      // Backwards compat.\n      rState.length < rState.highWaterMark\n    ) {\n      callback()\n    } else {\n      this[kCallback] = callback\n    }\n  })\n}\nTransform.prototype._read = function () {\n  if (this[kCallback]) {\n    const callback = this[kCallback]\n    this[kCallback] = null\n    callback()\n  }\n}\n","'use strict'\n\nconst { Symbol, SymbolAsyncIterator, SymbolIterator } = require('../../ours/primordials')\nconst kDestroyed = Symbol('kDestroyed')\nconst kIsErrored = Symbol('kIsErrored')\nconst kIsReadable = Symbol('kIsReadable')\nconst kIsDisturbed = Symbol('kIsDisturbed')\nfunction isReadableNodeStream(obj, strict = false) {\n  var _obj$_readableState\n  return !!(\n    (\n      obj &&\n      typeof obj.pipe === 'function' &&\n      typeof obj.on === 'function' &&\n      (!strict || (typeof obj.pause === 'function' && typeof obj.resume === 'function')) &&\n      (!obj._writableState ||\n        ((_obj$_readableState = obj._readableState) === null || _obj$_readableState === undefined\n          ? undefined\n          : _obj$_readableState.readable) !== false) &&\n      // Duplex\n      (!obj._writableState || obj._readableState)\n    ) // Writable has .pipe.\n  )\n}\n\nfunction isWritableNodeStream(obj) {\n  var _obj$_writableState\n  return !!(\n    (\n      obj &&\n      typeof obj.write === 'function' &&\n      typeof obj.on === 'function' &&\n      (!obj._readableState ||\n        ((_obj$_writableState = obj._writableState) === null || _obj$_writableState === undefined\n          ? undefined\n          : _obj$_writableState.writable) !== false)\n    ) // Duplex\n  )\n}\n\nfunction isDuplexNodeStream(obj) {\n  return !!(\n    obj &&\n    typeof obj.pipe === 'function' &&\n    obj._readableState &&\n    typeof obj.on === 'function' &&\n    typeof obj.write === 'function'\n  )\n}\nfunction isNodeStream(obj) {\n  return (\n    obj &&\n    (obj._readableState ||\n      obj._writableState ||\n      (typeof obj.write === 'function' && typeof obj.on === 'function') ||\n      (typeof obj.pipe === 'function' && typeof obj.on === 'function'))\n  )\n}\nfunction isIterable(obj, isAsync) {\n  if (obj == null) return false\n  if (isAsync === true) return typeof obj[SymbolAsyncIterator] === 'function'\n  if (isAsync === false) return typeof obj[SymbolIterator] === 'function'\n  return typeof obj[SymbolAsyncIterator] === 'function' || typeof obj[SymbolIterator] === 'function'\n}\nfunction isDestroyed(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return !!(stream.destroyed || stream[kDestroyed] || (state !== null && state !== undefined && state.destroyed))\n}\n\n// Have been end():d.\nfunction isWritableEnded(stream) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableEnded === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.ended) !== 'boolean') return null\n  return wState.ended\n}\n\n// Have emitted 'finish'.\nfunction isWritableFinished(stream, strict) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableFinished === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.finished) !== 'boolean') return null\n  return !!(wState.finished || (strict === false && wState.ended === true && wState.length === 0))\n}\n\n// Have been push(null):d.\nfunction isReadableEnded(stream) {\n  if (!isReadableNodeStream(stream)) return null\n  if (stream.readableEnded === true) return true\n  const rState = stream._readableState\n  if (!rState || rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.ended) !== 'boolean') return null\n  return rState.ended\n}\n\n// Have emitted 'end'.\nfunction isReadableFinished(stream, strict) {\n  if (!isReadableNodeStream(stream)) return null\n  const rState = stream._readableState\n  if (rState !== null && rState !== undefined && rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.endEmitted) !== 'boolean') return null\n  return !!(rState.endEmitted || (strict === false && rState.ended === true && rState.length === 0))\n}\nfunction isReadable(stream) {\n  if (stream && stream[kIsReadable] != null) return stream[kIsReadable]\n  if (typeof (stream === null || stream === undefined ? undefined : stream.readable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isReadableNodeStream(stream) && stream.readable && !isReadableFinished(stream)\n}\nfunction isWritable(stream) {\n  if (typeof (stream === null || stream === undefined ? undefined : stream.writable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isWritableNodeStream(stream) && stream.writable && !isWritableEnded(stream)\n}\nfunction isFinished(stream, opts) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (isDestroyed(stream)) {\n    return true\n  }\n  if ((opts === null || opts === undefined ? undefined : opts.readable) !== false && isReadable(stream)) {\n    return false\n  }\n  if ((opts === null || opts === undefined ? undefined : opts.writable) !== false && isWritable(stream)) {\n    return false\n  }\n  return true\n}\nfunction isWritableErrored(stream) {\n  var _stream$_writableStat, _stream$_writableStat2\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (stream.writableErrored) {\n    return stream.writableErrored\n  }\n  return (_stream$_writableStat =\n    (_stream$_writableStat2 = stream._writableState) === null || _stream$_writableStat2 === undefined\n      ? undefined\n      : _stream$_writableStat2.errored) !== null && _stream$_writableStat !== undefined\n    ? _stream$_writableStat\n    : null\n}\nfunction isReadableErrored(stream) {\n  var _stream$_readableStat, _stream$_readableStat2\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (stream.readableErrored) {\n    return stream.readableErrored\n  }\n  return (_stream$_readableStat =\n    (_stream$_readableStat2 = stream._readableState) === null || _stream$_readableStat2 === undefined\n      ? undefined\n      : _stream$_readableStat2.errored) !== null && _stream$_readableStat !== undefined\n    ? _stream$_readableStat\n    : null\n}\nfunction isClosed(stream) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (typeof stream.closed === 'boolean') {\n    return stream.closed\n  }\n  const wState = stream._writableState\n  const rState = stream._readableState\n  if (\n    typeof (wState === null || wState === undefined ? undefined : wState.closed) === 'boolean' ||\n    typeof (rState === null || rState === undefined ? undefined : rState.closed) === 'boolean'\n  ) {\n    return (\n      (wState === null || wState === undefined ? undefined : wState.closed) ||\n      (rState === null || rState === undefined ? undefined : rState.closed)\n    )\n  }\n  if (typeof stream._closed === 'boolean' && isOutgoingMessage(stream)) {\n    return stream._closed\n  }\n  return null\n}\nfunction isOutgoingMessage(stream) {\n  return (\n    typeof stream._closed === 'boolean' &&\n    typeof stream._defaultKeepAlive === 'boolean' &&\n    typeof stream._removedConnection === 'boolean' &&\n    typeof stream._removedContLen === 'boolean'\n  )\n}\nfunction isServerResponse(stream) {\n  return typeof stream._sent100 === 'boolean' && isOutgoingMessage(stream)\n}\nfunction isServerRequest(stream) {\n  var _stream$req\n  return (\n    typeof stream._consuming === 'boolean' &&\n    typeof stream._dumped === 'boolean' &&\n    ((_stream$req = stream.req) === null || _stream$req === undefined ? undefined : _stream$req.upgradeOrConnect) ===\n      undefined\n  )\n}\nfunction willEmitClose(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return (\n    (!state && isServerResponse(stream)) || !!(state && state.autoDestroy && state.emitClose && state.closed === false)\n  )\n}\nfunction isDisturbed(stream) {\n  var _stream$kIsDisturbed\n  return !!(\n    stream &&\n    ((_stream$kIsDisturbed = stream[kIsDisturbed]) !== null && _stream$kIsDisturbed !== undefined\n      ? _stream$kIsDisturbed\n      : stream.readableDidRead || stream.readableAborted)\n  )\n}\nfunction isErrored(stream) {\n  var _ref,\n    _ref2,\n    _ref3,\n    _ref4,\n    _ref5,\n    _stream$kIsErrored,\n    _stream$_readableStat3,\n    _stream$_writableStat3,\n    _stream$_readableStat4,\n    _stream$_writableStat4\n  return !!(\n    stream &&\n    ((_ref =\n      (_ref2 =\n        (_ref3 =\n          (_ref4 =\n            (_ref5 =\n              (_stream$kIsErrored = stream[kIsErrored]) !== null && _stream$kIsErrored !== undefined\n                ? _stream$kIsErrored\n                : stream.readableErrored) !== null && _ref5 !== undefined\n              ? _ref5\n              : stream.writableErrored) !== null && _ref4 !== undefined\n            ? _ref4\n            : (_stream$_readableStat3 = stream._readableState) === null || _stream$_readableStat3 === undefined\n            ? undefined\n            : _stream$_readableStat3.errorEmitted) !== null && _ref3 !== undefined\n          ? _ref3\n          : (_stream$_writableStat3 = stream._writableState) === null || _stream$_writableStat3 === undefined\n          ? undefined\n          : _stream$_writableStat3.errorEmitted) !== null && _ref2 !== undefined\n        ? _ref2\n        : (_stream$_readableStat4 = stream._readableState) === null || _stream$_readableStat4 === undefined\n        ? undefined\n        : _stream$_readableStat4.errored) !== null && _ref !== undefined\n      ? _ref\n      : (_stream$_writableStat4 = stream._writableState) === null || _stream$_writableStat4 === undefined\n      ? undefined\n      : _stream$_writableStat4.errored)\n  )\n}\nmodule.exports = {\n  kDestroyed,\n  isDisturbed,\n  kIsDisturbed,\n  isErrored,\n  kIsErrored,\n  isReadable,\n  kIsReadable,\n  isClosed,\n  isDestroyed,\n  isDuplexNodeStream,\n  isFinished,\n  isIterable,\n  isReadableNodeStream,\n  isReadableEnded,\n  isReadableFinished,\n  isReadableErrored,\n  isNodeStream,\n  isWritable,\n  isWritableNodeStream,\n  isWritableEnded,\n  isWritableFinished,\n  isWritableErrored,\n  isServerRequest,\n  isServerResponse,\n  willEmitClose\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n;('use strict')\nconst {\n  ArrayPrototypeSlice,\n  Error,\n  FunctionPrototypeSymbolHasInstance,\n  ObjectDefineProperty,\n  ObjectDefineProperties,\n  ObjectSetPrototypeOf,\n  StringPrototypeToLowerCase,\n  Symbol,\n  SymbolHasInstance\n} = require('../../ours/primordials')\nmodule.exports = Writable\nWritable.WritableState = WritableState\nconst { EventEmitter: EE } = require('events')\nconst Stream = require('./legacy').Stream\nconst { Buffer } = require('buffer')\nconst destroyImpl = require('./destroy')\nconst { addAbortSignal } = require('./add-abort-signal')\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\nconst {\n  ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED,\n  ERR_STREAM_ALREADY_FINISHED,\n  ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING\n} = require('../../ours/errors').codes\nconst { errorOrDestroy } = destroyImpl\nObjectSetPrototypeOf(Writable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Writable, Stream)\nfunction nop() {}\nconst kOnFinished = Symbol('kOnFinished')\nfunction WritableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex')\n\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.writableObjectMode)\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false)\n\n  // if _final has been called.\n  this.finalCalled = false\n\n  // drain event flag.\n  this.needDrain = false\n  // At the start of calling end()\n  this.ending = false\n  // When end() has been called, and returned.\n  this.ended = false\n  // When 'finish' is emitted.\n  this.finished = false\n\n  // Has it been destroyed\n  this.destroyed = false\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  const noDecode = !!(options && options.decodeStrings === false)\n  this.decodeStrings = !noDecode\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8'\n\n  // Not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0\n\n  // A flag to see when we're in the middle of a write.\n  this.writing = false\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0\n\n  // A flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true\n\n  // A flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false\n\n  // The callback that's passed to _write(chunk, cb).\n  this.onwrite = onwrite.bind(undefined, stream)\n\n  // The callback that the user supplies to write(chunk, encoding, cb).\n  this.writecb = null\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  this.afterWriteTickInfo = null\n  resetBuffer(this)\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n  this.constructed = true\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  this.prefinished = false\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  this.autoDestroy = !options || options.autoDestroy !== false\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  this.errored = null\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false\n  this[kOnFinished] = []\n}\nfunction resetBuffer(state) {\n  state.buffered = []\n  state.bufferedIndex = 0\n  state.allBuffers = true\n  state.allNoop = true\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  return ArrayPrototypeSlice(this.buffered, this.bufferedIndex)\n}\nObjectDefineProperty(WritableState.prototype, 'bufferedRequestCount', {\n  __proto__: null,\n  get() {\n    return this.buffered.length - this.bufferedIndex\n  }\n})\nfunction Writable(options) {\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable, this)) return new Writable(options)\n  this._writableState = new WritableState(options, this, isDuplex)\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write\n    if (typeof options.writev === 'function') this._writev = options.writev\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.final === 'function') this._final = options.final\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal) addAbortSignal(options.signal, this)\n  }\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    const state = this._writableState\n    if (!state.writing) {\n      clearBuffer(this, state)\n    }\n    finishMaybe(this, state)\n  })\n}\nObjectDefineProperty(Writable, SymbolHasInstance, {\n  __proto__: null,\n  value: function (object) {\n    if (FunctionPrototypeSymbolHasInstance(this, object)) return true\n    if (this !== Writable) return false\n    return object && object._writableState instanceof WritableState\n  }\n})\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE())\n}\nfunction _write(stream, chunk, encoding, cb) {\n  const state = stream._writableState\n  if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = state.defaultEncoding\n  } else {\n    if (!encoding) encoding = state.defaultEncoding\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n    if (typeof cb !== 'function') cb = nop\n  }\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES()\n  } else if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      if (state.decodeStrings !== false) {\n        chunk = Buffer.from(chunk, encoding)\n        encoding = 'buffer'\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer'\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = 'buffer'\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n  let err\n  if (state.ending) {\n    err = new ERR_STREAM_WRITE_AFTER_END()\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write')\n  }\n  if (err) {\n    process.nextTick(cb, err)\n    errorOrDestroy(stream, err, true)\n    return err\n  }\n  state.pendingcb++\n  return writeOrBuffer(stream, state, chunk, encoding, cb)\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  return _write(this, chunk, encoding, cb) === true\n}\nWritable.prototype.cork = function () {\n  this._writableState.corked++\n}\nWritable.prototype.uncork = function () {\n  const state = this._writableState\n  if (state.corked) {\n    state.corked--\n    if (!state.writing) clearBuffer(this, state)\n  }\n}\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = StringPrototypeToLowerCase(encoding)\n  if (!Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n  this._writableState.defaultEncoding = encoding\n  return this\n}\n\n// If we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, callback) {\n  const len = state.objectMode ? 1 : chunk.length\n  state.length += len\n\n  // stream._write resets state.length\n  const ret = state.length < state.highWaterMark\n  // We must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true\n  if (state.writing || state.corked || state.errored || !state.constructed) {\n    state.buffered.push({\n      chunk,\n      encoding,\n      callback\n    })\n    if (state.allBuffers && encoding !== 'buffer') {\n      state.allBuffers = false\n    }\n    if (state.allNoop && callback !== nop) {\n      state.allNoop = false\n    }\n  } else {\n    state.writelen = len\n    state.writecb = callback\n    state.writing = true\n    state.sync = true\n    stream._write(chunk, encoding, state.onwrite)\n    state.sync = false\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && !state.errored && !state.destroyed\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len\n  state.writecb = cb\n  state.writing = true\n  state.sync = true\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'))\n  else if (writev) stream._writev(chunk, state.onwrite)\n  else stream._write(chunk, encoding, state.onwrite)\n  state.sync = false\n}\nfunction onwriteError(stream, state, er, cb) {\n  --state.pendingcb\n  cb(er)\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write, not to the buffered\n  // writes.\n  errorBuffer(state)\n  // This can emit error, but error must always follow cb.\n  errorOrDestroy(stream, er)\n}\nfunction onwrite(stream, er) {\n  const state = stream._writableState\n  const sync = state.sync\n  const cb = state.writecb\n  if (typeof cb !== 'function') {\n    errorOrDestroy(stream, new ERR_MULTIPLE_CALLBACK())\n    return\n  }\n  state.writing = false\n  state.writecb = null\n  state.length -= state.writelen\n  state.writelen = 0\n  if (er) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack // eslint-disable-line no-unused-expressions\n\n    if (!state.errored) {\n      state.errored = er\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er\n    }\n    if (sync) {\n      process.nextTick(onwriteError, stream, state, er, cb)\n    } else {\n      onwriteError(stream, state, er, cb)\n    }\n  } else {\n    if (state.buffered.length > state.bufferedIndex) {\n      clearBuffer(stream, state)\n    }\n    if (sync) {\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case, we do not schedule a new nextTick(), but\n      // rather just increase a counter, to improve performance and avoid\n      // memory allocations.\n      if (state.afterWriteTickInfo !== null && state.afterWriteTickInfo.cb === cb) {\n        state.afterWriteTickInfo.count++\n      } else {\n        state.afterWriteTickInfo = {\n          count: 1,\n          cb,\n          stream,\n          state\n        }\n        process.nextTick(afterWriteTick, state.afterWriteTickInfo)\n      }\n    } else {\n      afterWrite(stream, state, 1, cb)\n    }\n  }\n}\nfunction afterWriteTick({ stream, state, count, cb }) {\n  state.afterWriteTickInfo = null\n  return afterWrite(stream, state, count, cb)\n}\nfunction afterWrite(stream, state, count, cb) {\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 && state.needDrain\n  if (needDrain) {\n    state.needDrain = false\n    stream.emit('drain')\n  }\n  while (count-- > 0) {\n    state.pendingcb--\n    cb()\n  }\n  if (state.destroyed) {\n    errorBuffer(state)\n  }\n  finishMaybe(stream, state)\n}\n\n// If there's something in the buffer waiting, then invoke callbacks.\nfunction errorBuffer(state) {\n  if (state.writing) {\n    return\n  }\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n    var _state$errored\n    const { chunk, callback } = state.buffered[n]\n    const len = state.objectMode ? 1 : chunk.length\n    state.length -= len\n    callback(\n      (_state$errored = state.errored) !== null && _state$errored !== undefined\n        ? _state$errored\n        : new ERR_STREAM_DESTROYED('write')\n    )\n  }\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    var _state$errored2\n    onfinishCallbacks[i](\n      (_state$errored2 = state.errored) !== null && _state$errored2 !== undefined\n        ? _state$errored2\n        : new ERR_STREAM_DESTROYED('end')\n    )\n  }\n  resetBuffer(state)\n}\n\n// If there's something in the buffer waiting, then process it.\nfunction clearBuffer(stream, state) {\n  if (state.corked || state.bufferProcessing || state.destroyed || !state.constructed) {\n    return\n  }\n  const { buffered, bufferedIndex, objectMode } = state\n  const bufferedLength = buffered.length - bufferedIndex\n  if (!bufferedLength) {\n    return\n  }\n  let i = bufferedIndex\n  state.bufferProcessing = true\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1\n    const callback = state.allNoop\n      ? nop\n      : (err) => {\n          for (let n = i; n < buffered.length; ++n) {\n            buffered[n].callback(err)\n          }\n        }\n    // Make a copy of `buffered` if it's going to be used by `callback` above,\n    // since `doWrite` will mutate the array.\n    const chunks = state.allNoop && i === 0 ? buffered : ArrayPrototypeSlice(buffered, i)\n    chunks.allBuffers = state.allBuffers\n    doWrite(stream, state, true, state.length, chunks, '', callback)\n    resetBuffer(state)\n  } else {\n    do {\n      const { chunk, encoding, callback } = buffered[i]\n      buffered[i++] = null\n      const len = objectMode ? 1 : chunk.length\n      doWrite(stream, state, false, len, chunk, encoding, callback)\n    } while (i < buffered.length && !state.writing)\n    if (i === buffered.length) {\n      resetBuffer(state)\n    } else if (i > 256) {\n      buffered.splice(0, i)\n      state.bufferedIndex = 0\n    } else {\n      state.bufferedIndex = i\n    }\n  }\n  state.bufferProcessing = false\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  if (this._writev) {\n    this._writev(\n      [\n        {\n          chunk,\n          encoding\n        }\n      ],\n      cb\n    )\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()')\n  }\n}\nWritable.prototype._writev = null\nWritable.prototype.end = function (chunk, encoding, cb) {\n  const state = this._writableState\n  if (typeof chunk === 'function') {\n    cb = chunk\n    chunk = null\n    encoding = null\n  } else if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = null\n  }\n  let err\n  if (chunk !== null && chunk !== undefined) {\n    const ret = _write(this, chunk, encoding)\n    if (ret instanceof Error) {\n      err = ret\n    }\n  }\n\n  // .end() fully uncorks.\n  if (state.corked) {\n    state.corked = 1\n    this.uncork()\n  }\n  if (err) {\n    // Do nothing...\n  } else if (!state.errored && !state.ending) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However, usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state.ending = true\n    finishMaybe(this, state, true)\n    state.ended = true\n  } else if (state.finished) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end')\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('end')\n  }\n  if (typeof cb === 'function') {\n    if (err || state.finished) {\n      process.nextTick(cb, err)\n    } else {\n      state[kOnFinished].push(cb)\n    }\n  }\n  return this\n}\nfunction needFinish(state) {\n  return (\n    state.ending &&\n    !state.destroyed &&\n    state.constructed &&\n    state.length === 0 &&\n    !state.errored &&\n    state.buffered.length === 0 &&\n    !state.finished &&\n    !state.writing &&\n    !state.errorEmitted &&\n    !state.closeEmitted\n  )\n}\nfunction callFinal(stream, state) {\n  let called = false\n  function onFinish(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    state.pendingcb--\n    if (err) {\n      const onfinishCallbacks = state[kOnFinished].splice(0)\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\n        onfinishCallbacks[i](err)\n      }\n      errorOrDestroy(stream, err, state.sync)\n    } else if (needFinish(state)) {\n      state.prefinished = true\n      stream.emit('prefinish')\n      // Backwards compat. Don't check state.sync here.\n      // Some streams assume 'finish' will be emitted\n      // asynchronously relative to _final callback.\n      state.pendingcb++\n      process.nextTick(finish, stream, state)\n    }\n  }\n  state.sync = true\n  state.pendingcb++\n  try {\n    stream._final(onFinish)\n  } catch (err) {\n    onFinish(err)\n  }\n  state.sync = false\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.finalCalled = true\n      callFinal(stream, state)\n    } else {\n      state.prefinished = true\n      stream.emit('prefinish')\n    }\n  }\n}\nfunction finishMaybe(stream, state, sync) {\n  if (needFinish(state)) {\n    prefinish(stream, state)\n    if (state.pendingcb === 0) {\n      if (sync) {\n        state.pendingcb++\n        process.nextTick(\n          (stream, state) => {\n            if (needFinish(state)) {\n              finish(stream, state)\n            } else {\n              state.pendingcb--\n            }\n          },\n          stream,\n          state\n        )\n      } else if (needFinish(state)) {\n        state.pendingcb++\n        finish(stream, state)\n      }\n    }\n  }\n}\nfunction finish(stream, state) {\n  state.pendingcb--\n  state.finished = true\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i]()\n  }\n  stream.emit('finish')\n  if (state.autoDestroy) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState\n    const autoDestroy =\n      !rState ||\n      (rState.autoDestroy &&\n        // We don't expect the readable to ever 'end'\n        // if readable is explicitly set to false.\n        (rState.endEmitted || rState.readable === false))\n    if (autoDestroy) {\n      stream.destroy()\n    }\n  }\n}\nObjectDefineProperties(Writable.prototype, {\n  closed: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.destroyed : false\n    },\n    set(value) {\n      // Backward compatibility, the user is explicitly managing destroyed.\n      if (this._writableState) {\n        this._writableState.destroyed = value\n      }\n    }\n  },\n  writable: {\n    __proto__: null,\n    get() {\n      const w = this._writableState\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false && !w.destroyed && !w.errored && !w.ending && !w.ended\n    },\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val\n      }\n    }\n  },\n  writableFinished: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.finished : false\n    }\n  },\n  writableObjectMode: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.objectMode : false\n    }\n  },\n  writableBuffer: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.getBuffer()\n    }\n  },\n  writableEnded: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.ending : false\n    }\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    get() {\n      const wState = this._writableState\n      if (!wState) return false\n      return !wState.destroyed && !wState.ending && wState.needDrain\n    }\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.highWaterMark\n    }\n  },\n  writableCorked: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.corked : 0\n    }\n  },\n  writableLength: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.length\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._writableState ? this._writableState.errored : null\n    }\n  },\n  writableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._writableState.writable !== false &&\n        (this._writableState.destroyed || this._writableState.errored) &&\n        !this._writableState.finished\n      )\n    }\n  }\n})\nconst destroy = destroyImpl.destroy\nWritable.prototype.destroy = function (err, cb) {\n  const state = this._writableState\n\n  // Invoke pending callbacks.\n  if (!state.destroyed && (state.bufferedIndex < state.buffered.length || state[kOnFinished].length)) {\n    process.nextTick(errorBuffer, state)\n  }\n  destroy.call(this, err, cb)\n  return this\n}\nWritable.prototype._undestroy = destroyImpl.undestroy\nWritable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\nWritable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nWritable.fromWeb = function (writableStream, options) {\n  return lazyWebStreams().newStreamWritableFromWritableStream(writableStream, options)\n}\nWritable.toWeb = function (streamWritable) {\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable)\n}\n","'use strict'\n\nconst {\n  ArrayIsArray,\n  ArrayPrototypeIncludes,\n  ArrayPrototypeJoin,\n  ArrayPrototypeMap,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberMAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER,\n  NumberParseInt,\n  ObjectPrototypeHasOwnProperty,\n  RegExpPrototypeExec,\n  String,\n  StringPrototypeToUpperCase,\n  StringPrototypeTrim\n} = require('../ours/primordials')\nconst {\n  hideStackFrames,\n  codes: { ERR_SOCKET_BAD_PORT, ERR_INVALID_ARG_TYPE, ERR_INVALID_ARG_VALUE, ERR_OUT_OF_RANGE, ERR_UNKNOWN_SIGNAL }\n} = require('../ours/errors')\nconst { normalizeEncoding } = require('../ours/util')\nconst { isAsyncFunction, isArrayBufferView } = require('../ours/util').types\nconst signals = {}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0)\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === value >>> 0\n}\nconst octalReg = /^[0-7]+$/\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string'\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land, but any value higher than 0o777 will result in platform-specific\n * behaviors.\n *\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified, will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value, name, def) {\n  if (typeof value === 'undefined') {\n    value = def\n  }\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg, value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name, value, modeDesc)\n    }\n    value = NumberParseInt(value, 8)\n  }\n  validateUint32(value, name)\n  return value\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames((value, name, min = NumberMIN_SAFE_INTEGER, max = NumberMAX_SAFE_INTEGER) => {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (!NumberIsInteger(value)) throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  if (value < min || value > max) throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n})\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames((value, name, min = -2147483648, max = 2147483647) => {\n  // The defaults for min and max correspond to the limits of 32-bit integers.\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {number|boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value, name, positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n  const min = positive ? 1 : 0\n  // 2 ** 32 === 4294967296\n  const max = 4294967295\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nfunction validateString(value, name) {\n  if (typeof value !== 'string') throw new ERR_INVALID_ARG_TYPE(name, 'string', value)\n}\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nfunction validateNumber(value, name, min = undefined, max) {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (\n    (min != null && value < min) ||\n    (max != null && value > max) ||\n    ((min != null || max != null) && NumberIsNaN(value))\n  ) {\n    throw new ERR_OUT_OF_RANGE(\n      name,\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`,\n      value\n    )\n  }\n}\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value, name, oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf, value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf, (v) => (typeof v === 'string' ? `'${v}'` : String(v))),\n      ', '\n    )\n    const reason = 'must be one of: ' + allowed\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nfunction validateBoolean(value, name) {\n  if (typeof value !== 'boolean') throw new ERR_INVALID_ARG_TYPE(name, 'boolean', value)\n}\nfunction getOwnPropertyValueOrDefault(options, key, defaultValue) {\n  return options == null || !ObjectPrototypeHasOwnProperty(options, key) ? defaultValue : options[key]\n}\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {{\n *   allowArray?: boolean,\n *   allowFunction?: boolean,\n *   nullable?: boolean\n * }} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames((value, name, options = null) => {\n  const allowArray = getOwnPropertyValueOrDefault(options, 'allowArray', false)\n  const allowFunction = getOwnPropertyValueOrDefault(options, 'allowFunction', false)\n  const nullable = getOwnPropertyValueOrDefault(options, 'nullable', false)\n  if (\n    (!nullable && value === null) ||\n    (!allowArray && ArrayIsArray(value)) ||\n    (typeof value !== 'object' && (!allowFunction || typeof value !== 'function'))\n  ) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Object', value)\n  }\n})\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value, name, minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Array', value)\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nfunction validateSignalName(signal, name = 'signal') {\n  validateString(signal, name)\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal + ' (signals must use all capital letters)')\n    }\n    throw new ERR_UNKNOWN_SIGNAL(signal)\n  }\n}\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer, name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name, ['Buffer', 'TypedArray', 'DataView'], buffer)\n  }\n})\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nfunction validateEncoding(data, encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding)\n  const length = data.length\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding', encoding, `is invalid for data of length ${length}`)\n  }\n}\n\n/**\n * Check that the port number is not NaN when coerced to a number,\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nfunction validatePort(port, name = 'Port', allowZero = true) {\n  if (\n    (typeof port !== 'number' && typeof port !== 'string') ||\n    (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n    +port !== +port >>> 0 ||\n    port > 0xffff ||\n    (port === 0 && !allowZero)\n  ) {\n    throw new ERR_SOCKET_BAD_PORT(name, port, allowZero)\n  }\n  return port | 0\n}\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal, name) => {\n  if (signal !== undefined && (signal === null || typeof signal !== 'object' || !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n})\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function') throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value)) throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value, name) => {\n  if (value !== undefined) throw new ERR_INVALID_ARG_TYPE(name, 'undefined', value)\n})\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value, name, union) {\n  if (!ArrayPrototypeIncludes(union, value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, `('${ArrayPrototypeJoin(union, '|')}')`, value)\n  }\n}\nmodule.exports = {\n  isInt32,\n  isUint32,\n  parseFileMode,\n  validateArray,\n  validateBoolean,\n  validateBuffer,\n  validateEncoding,\n  validateFunction,\n  validateInt32,\n  validateInteger,\n  validateNumber,\n  validateObject,\n  validateOneOf,\n  validatePlainFunction,\n  validatePort,\n  validateSignalName,\n  validateString,\n  validateUint32,\n  validateUndefined,\n  validateUnion,\n  validateAbortSignal\n}\n","'use strict'\n\nconst CustomStream = require('../stream')\nconst promises = require('../stream/promises')\nconst originalDestroy = CustomStream.Readable.destroy\nmodule.exports = CustomStream.Readable\n\n// Explicit export naming is needed for ESM\nmodule.exports._uint8ArrayToBuffer = CustomStream._uint8ArrayToBuffer\nmodule.exports._isUint8Array = CustomStream._isUint8Array\nmodule.exports.isDisturbed = CustomStream.isDisturbed\nmodule.exports.isErrored = CustomStream.isErrored\nmodule.exports.isReadable = CustomStream.isReadable\nmodule.exports.Readable = CustomStream.Readable\nmodule.exports.Writable = CustomStream.Writable\nmodule.exports.Duplex = CustomStream.Duplex\nmodule.exports.Transform = CustomStream.Transform\nmodule.exports.PassThrough = CustomStream.PassThrough\nmodule.exports.addAbortSignal = CustomStream.addAbortSignal\nmodule.exports.finished = CustomStream.finished\nmodule.exports.destroy = CustomStream.destroy\nmodule.exports.destroy = originalDestroy\nmodule.exports.pipeline = CustomStream.pipeline\nmodule.exports.compose = CustomStream.compose\nObject.defineProperty(CustomStream, 'promises', {\n  configurable: true,\n  enumerable: true,\n  get() {\n    return promises\n  }\n})\nmodule.exports.Stream = CustomStream.Stream\n\n// Allow default importing\nmodule.exports.default = module.exports\n","'use strict'\n\nconst { format, inspect, AggregateError: CustomAggregateError } = require('./util')\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/errors.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/errors.js\n\n  Don't try to replace with the original file and keep it up to date (starting from E(...) definitions)\n  with the upstream file.\n*/\n\nconst AggregateError = globalThis.AggregateError || CustomAggregateError\nconst kIsNodeError = Symbol('kIsNodeError')\nconst kTypes = [\n  'string',\n  'function',\n  'number',\n  'object',\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function',\n  'Object',\n  'boolean',\n  'bigint',\n  'symbol'\n]\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/\nconst nodeInternalPrefix = '__node_internal_'\nconst codes = {}\nfunction assert(value, message) {\n  if (!value) {\n    throw new codes.ERR_INTERNAL_ASSERTION(message)\n  }\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\nfunction getMessage(key, msg, args) {\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length,\n      // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${msg.length}).`\n    )\n    return msg(...args)\n  }\n  const expectedLength = (msg.match(/%[dfijoOs]/g) || []).length\n  assert(\n    expectedLength === args.length,\n    `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`\n  )\n  if (args.length === 0) {\n    return msg\n  }\n  return format(msg, ...args)\n}\nfunction E(code, message, Base) {\n  if (!Base) {\n    Base = Error\n  }\n  class NodeError extends Base {\n    constructor(...args) {\n      super(getMessage(code, message, args))\n    }\n    toString() {\n      return `${this.name} [${code}]: ${this.message}`\n    }\n  }\n  Object.defineProperties(NodeError.prototype, {\n    name: {\n      value: Base.name,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    },\n    toString: {\n      value() {\n        return `${this.name} [${code}]: ${this.message}`\n      },\n      writable: true,\n      enumerable: false,\n      configurable: true\n    }\n  })\n  NodeError.prototype.code = code\n  NodeError.prototype[kIsNodeError] = true\n  codes[code] = NodeError\n}\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name\n  Object.defineProperty(fn, 'name', {\n    value: hidden\n  })\n  return fn\n}\nfunction aggregateTwoErrors(innerError, outerError) {\n  if (innerError && outerError && innerError !== outerError) {\n    if (Array.isArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      outerError.errors.push(innerError)\n      return outerError\n    }\n    const err = new AggregateError([outerError, innerError], outerError.message)\n    err.code = outerError.code\n    return err\n  }\n  return innerError || outerError\n}\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted', options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options', 'Object', options)\n    }\n    super(message, options)\n    this.code = 'ABORT_ERR'\n    this.name = 'AbortError'\n  }\n}\nE('ERR_ASSERTION', '%s', Error)\nE(\n  'ERR_INVALID_ARG_TYPE',\n  (name, expected, actual) => {\n    assert(typeof name === 'string', \"'name' must be a string\")\n    if (!Array.isArray(expected)) {\n      expected = [expected]\n    }\n    let msg = 'The '\n    if (name.endsWith(' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `\n    } else {\n      msg += `\"${name}\" ${name.includes('.') ? 'property' : 'argument'} `\n    }\n    msg += 'must be '\n    const types = []\n    const instances = []\n    const other = []\n    for (const value of expected) {\n      assert(typeof value === 'string', 'All expected entries have to be of type string')\n      if (kTypes.includes(value)) {\n        types.push(value.toLowerCase())\n      } else if (classRegExp.test(value)) {\n        instances.push(value)\n      } else {\n        assert(value !== 'object', 'The value \"object\" should be written as \"Object\"')\n        other.push(value)\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = types.indexOf('object')\n      if (pos !== -1) {\n        types.splice(types, pos, 1)\n        instances.push('Object')\n      }\n    }\n    if (types.length > 0) {\n      switch (types.length) {\n        case 1:\n          msg += `of type ${types[0]}`\n          break\n        case 2:\n          msg += `one of type ${types[0]} or ${types[1]}`\n          break\n        default: {\n          const last = types.pop()\n          msg += `one of type ${types.join(', ')}, or ${last}`\n        }\n      }\n      if (instances.length > 0 || other.length > 0) {\n        msg += ' or '\n      }\n    }\n    if (instances.length > 0) {\n      switch (instances.length) {\n        case 1:\n          msg += `an instance of ${instances[0]}`\n          break\n        case 2:\n          msg += `an instance of ${instances[0]} or ${instances[1]}`\n          break\n        default: {\n          const last = instances.pop()\n          msg += `an instance of ${instances.join(', ')}, or ${last}`\n        }\n      }\n      if (other.length > 0) {\n        msg += ' or '\n      }\n    }\n    switch (other.length) {\n      case 0:\n        break\n      case 1:\n        if (other[0].toLowerCase() !== other[0]) {\n          msg += 'an '\n        }\n        msg += `${other[0]}`\n        break\n      case 2:\n        msg += `one of ${other[0]} or ${other[1]}`\n        break\n      default: {\n        const last = other.pop()\n        msg += `one of ${other.join(', ')}, or ${last}`\n      }\n    }\n    if (actual == null) {\n      msg += `. Received ${actual}`\n    } else if (typeof actual === 'function' && actual.name) {\n      msg += `. Received function ${actual.name}`\n    } else if (typeof actual === 'object') {\n      var _actual$constructor\n      if (\n        (_actual$constructor = actual.constructor) !== null &&\n        _actual$constructor !== undefined &&\n        _actual$constructor.name\n      ) {\n        msg += `. Received an instance of ${actual.constructor.name}`\n      } else {\n        const inspected = inspect(actual, {\n          depth: -1\n        })\n        msg += `. Received ${inspected}`\n      }\n    } else {\n      let inspected = inspect(actual, {\n        colors: false\n      })\n      if (inspected.length > 25) {\n        inspected = `${inspected.slice(0, 25)}...`\n      }\n      msg += `. Received type ${typeof actual} (${inspected})`\n    }\n    return msg\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_ARG_VALUE',\n  (name, value, reason = 'is invalid') => {\n    let inspected = inspect(value)\n    if (inspected.length > 128) {\n      inspected = inspected.slice(0, 128) + '...'\n    }\n    const type = name.includes('.') ? 'property' : 'argument'\n    return `The ${type} '${name}' ${reason}. Received ${inspected}`\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_RETURN_VALUE',\n  (input, name, value) => {\n    var _value$constructor\n    const type =\n      value !== null &&\n      value !== undefined &&\n      (_value$constructor = value.constructor) !== null &&\n      _value$constructor !== undefined &&\n      _value$constructor.name\n        ? `instance of ${value.constructor.name}`\n        : `type ${typeof value}`\n    return `Expected ${input} to be returned from the \"${name}\"` + ` function but got ${type}.`\n  },\n  TypeError\n)\nE(\n  'ERR_MISSING_ARGS',\n  (...args) => {\n    assert(args.length > 0, 'At least one arg needs to be specified')\n    let msg\n    const len = args.length\n    args = (Array.isArray(args) ? args : [args]).map((a) => `\"${a}\"`).join(' or ')\n    switch (len) {\n      case 1:\n        msg += `The ${args[0]} argument`\n        break\n      case 2:\n        msg += `The ${args[0]} and ${args[1]} arguments`\n        break\n      default:\n        {\n          const last = args.pop()\n          msg += `The ${args.join(', ')}, and ${last} arguments`\n        }\n        break\n    }\n    return `${msg} must be specified`\n  },\n  TypeError\n)\nE(\n  'ERR_OUT_OF_RANGE',\n  (str, range, input) => {\n    assert(range, 'Missing \"range\" argument')\n    let received\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    } else {\n      received = inspect(input)\n    }\n    return `The value of \"${str}\" is out of range. It must be ${range}. Received ${received}`\n  },\n  RangeError\n)\nE('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times', Error)\nE('ERR_METHOD_NOT_IMPLEMENTED', 'The %s method is not implemented', Error)\nE('ERR_STREAM_ALREADY_FINISHED', 'Cannot call %s after a stream was finished', Error)\nE('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable', Error)\nE('ERR_STREAM_DESTROYED', 'Cannot call %s after a stream was destroyed', Error)\nE('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError)\nE('ERR_STREAM_PREMATURE_CLOSE', 'Premature close', Error)\nE('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF', Error)\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event', Error)\nE('ERR_STREAM_WRITE_AFTER_END', 'write after end', Error)\nE('ERR_UNKNOWN_ENCODING', 'Unknown encoding: %s', TypeError)\nmodule.exports = {\n  AbortError,\n  aggregateTwoErrors: hideStackFrames(aggregateTwoErrors),\n  hideStackFrames,\n  codes\n}\n","'use strict'\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/per_context/primordials.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/per_context/primordials.js\n\n  Don't try to replace with the original file and keep it up to date with the upstream file.\n*/\nmodule.exports = {\n  ArrayIsArray(self) {\n    return Array.isArray(self)\n  },\n  ArrayPrototypeIncludes(self, el) {\n    return self.includes(el)\n  },\n  ArrayPrototypeIndexOf(self, el) {\n    return self.indexOf(el)\n  },\n  ArrayPrototypeJoin(self, sep) {\n    return self.join(sep)\n  },\n  ArrayPrototypeMap(self, fn) {\n    return self.map(fn)\n  },\n  ArrayPrototypePop(self, el) {\n    return self.pop(el)\n  },\n  ArrayPrototypePush(self, el) {\n    return self.push(el)\n  },\n  ArrayPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n  Error,\n  FunctionPrototypeCall(fn, thisArgs, ...args) {\n    return fn.call(thisArgs, ...args)\n  },\n  FunctionPrototypeSymbolHasInstance(self, instance) {\n    return Function.prototype[Symbol.hasInstance].call(self, instance)\n  },\n  MathFloor: Math.floor,\n  Number,\n  NumberIsInteger: Number.isInteger,\n  NumberIsNaN: Number.isNaN,\n  NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER,\n  NumberParseInt: Number.parseInt,\n  ObjectDefineProperties(self, props) {\n    return Object.defineProperties(self, props)\n  },\n  ObjectDefineProperty(self, name, prop) {\n    return Object.defineProperty(self, name, prop)\n  },\n  ObjectGetOwnPropertyDescriptor(self, name) {\n    return Object.getOwnPropertyDescriptor(self, name)\n  },\n  ObjectKeys(obj) {\n    return Object.keys(obj)\n  },\n  ObjectSetPrototypeOf(target, proto) {\n    return Object.setPrototypeOf(target, proto)\n  },\n  Promise,\n  PromisePrototypeCatch(self, fn) {\n    return self.catch(fn)\n  },\n  PromisePrototypeThen(self, thenFn, catchFn) {\n    return self.then(thenFn, catchFn)\n  },\n  PromiseReject(err) {\n    return Promise.reject(err)\n  },\n  ReflectApply: Reflect.apply,\n  RegExpPrototypeTest(self, value) {\n    return self.test(value)\n  },\n  SafeSet: Set,\n  String,\n  StringPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n  StringPrototypeToLowerCase(self) {\n    return self.toLowerCase()\n  },\n  StringPrototypeToUpperCase(self) {\n    return self.toUpperCase()\n  },\n  StringPrototypeTrim(self) {\n    return self.trim()\n  },\n  Symbol,\n  SymbolAsyncIterator: Symbol.asyncIterator,\n  SymbolHasInstance: Symbol.hasInstance,\n  SymbolIterator: Symbol.iterator,\n  TypedArrayPrototypeSet(self, buf, len) {\n    return self.set(buf, len)\n  },\n  Uint8Array\n}\n","'use strict'\n\nconst bufferModule = require('buffer')\nconst AsyncFunction = Object.getPrototypeOf(async function () {}).constructor\nconst Blob = globalThis.Blob || bufferModule.Blob\n/* eslint-disable indent */\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        // eslint-disable-next-line indent\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\n/* eslint-enable indent */\n\n// This is a simplified version of AggregateError\nclass AggregateError extends Error {\n  constructor(errors) {\n    if (!Array.isArray(errors)) {\n      throw new TypeError(`Expected input to be an Array, got ${typeof errors}`)\n    }\n    let message = ''\n    for (let i = 0; i < errors.length; i++) {\n      message += `    ${errors[i].stack}\\n`\n    }\n    super(message)\n    this.name = 'AggregateError'\n    this.errors = errors\n  }\n}\nmodule.exports = {\n  AggregateError,\n  kEmptyObject: Object.freeze({}),\n  once(callback) {\n    let called = false\n    return function (...args) {\n      if (called) {\n        return\n      }\n      called = true\n      callback.apply(this, args)\n    }\n  },\n  createDeferredPromise: function () {\n    let resolve\n    let reject\n\n    // eslint-disable-next-line promise/param-names\n    const promise = new Promise((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n    return {\n      promise,\n      resolve,\n      reject\n    }\n  },\n  promisify(fn) {\n    return new Promise((resolve, reject) => {\n      fn((err, ...args) => {\n        if (err) {\n          return reject(err)\n        }\n        return resolve(...args)\n      })\n    })\n  },\n  debuglog() {\n    return function () {}\n  },\n  format(format, ...args) {\n    // Simplified version of https://nodejs.org/api/util.html#utilformatformat-args\n    return format.replace(/%([sdifj])/g, function (...[_unused, type]) {\n      const replacement = args.shift()\n      if (type === 'f') {\n        return replacement.toFixed(6)\n      } else if (type === 'j') {\n        return JSON.stringify(replacement)\n      } else if (type === 's' && typeof replacement === 'object') {\n        const ctor = replacement.constructor !== Object ? replacement.constructor.name : ''\n        return `${ctor} {}`.trim()\n      } else {\n        return replacement.toString()\n      }\n    })\n  },\n  inspect(value) {\n    // Vastly simplified version of https://nodejs.org/api/util.html#utilinspectobject-options\n    switch (typeof value) {\n      case 'string':\n        if (value.includes(\"'\")) {\n          if (!value.includes('\"')) {\n            return `\"${value}\"`\n          } else if (!value.includes('`') && !value.includes('${')) {\n            return `\\`${value}\\``\n          }\n        }\n        return `'${value}'`\n      case 'number':\n        if (isNaN(value)) {\n          return 'NaN'\n        } else if (Object.is(value, -0)) {\n          return String(value)\n        }\n        return value\n      case 'bigint':\n        return `${String(value)}n`\n      case 'boolean':\n      case 'undefined':\n        return String(value)\n      case 'object':\n        return '{}'\n    }\n  },\n  types: {\n    isAsyncFunction(fn) {\n      return fn instanceof AsyncFunction\n    },\n    isArrayBufferView(arr) {\n      return ArrayBuffer.isView(arr)\n    }\n  },\n  isBlob\n}\nmodule.exports.promisify.custom = Symbol.for('nodejs.util.promisify.custom')\n","/* replacement start */\n\nconst { Buffer } = require('buffer')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\nconst { ObjectDefineProperty, ObjectKeys, ReflectApply } = require('./ours/primordials')\nconst {\n  promisify: { custom: customPromisify }\n} = require('./ours/util')\nconst { streamReturningOperators, promiseReturningOperators } = require('./internal/streams/operators')\nconst {\n  codes: { ERR_ILLEGAL_CONSTRUCTOR }\n} = require('./ours/errors')\nconst compose = require('./internal/streams/compose')\nconst { pipeline } = require('./internal/streams/pipeline')\nconst { destroyer } = require('./internal/streams/destroy')\nconst eos = require('./internal/streams/end-of-stream')\nconst internalBuffer = {}\nconst promises = require('./stream/promises')\nconst utils = require('./internal/streams/utils')\nconst Stream = (module.exports = require('./internal/streams/legacy').Stream)\nStream.isDisturbed = utils.isDisturbed\nStream.isErrored = utils.isErrored\nStream.isReadable = utils.isReadable\nStream.Readable = require('./internal/streams/readable')\nfor (const key of ObjectKeys(streamReturningOperators)) {\n  const op = streamReturningOperators[key]\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n    return Stream.Readable.from(ReflectApply(op, this, args))\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\nfor (const key of ObjectKeys(promiseReturningOperators)) {\n  const op = promiseReturningOperators[key]\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n    return ReflectApply(op, this, args)\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\nStream.Writable = require('./internal/streams/writable')\nStream.Duplex = require('./internal/streams/duplex')\nStream.Transform = require('./internal/streams/transform')\nStream.PassThrough = require('./internal/streams/passthrough')\nStream.pipeline = pipeline\nconst { addAbortSignal } = require('./internal/streams/add-abort-signal')\nStream.addAbortSignal = addAbortSignal\nStream.finished = eos\nStream.destroy = destroyer\nStream.compose = compose\nObjectDefineProperty(Stream, 'promises', {\n  __proto__: null,\n  configurable: true,\n  enumerable: true,\n  get() {\n    return promises\n  }\n})\nObjectDefineProperty(pipeline, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.pipeline\n  }\n})\nObjectDefineProperty(eos, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.finished\n  }\n})\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream\nStream._isUint8Array = function isUint8Array(value) {\n  return value instanceof Uint8Array\n}\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n}\n","'use strict'\n\nconst { ArrayPrototypePop, Promise } = require('../ours/primordials')\nconst { isIterable, isNodeStream } = require('../internal/streams/utils')\nconst { pipelineImpl: pl } = require('../internal/streams/pipeline')\nconst { finished } = require('../internal/streams/end-of-stream')\nfunction pipeline(...streams) {\n  return new Promise((resolve, reject) => {\n    let signal\n    let end\n    const lastArg = streams[streams.length - 1]\n    if (lastArg && typeof lastArg === 'object' && !isNodeStream(lastArg) && !isIterable(lastArg)) {\n      const options = ArrayPrototypePop(streams)\n      signal = options.signal\n      end = options.end\n    }\n    pl(\n      streams,\n      (err, value) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      },\n      {\n        signal,\n        end\n      }\n    )\n  })\n}\nmodule.exports = {\n  finished,\n  pipeline\n}\n","const RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: `${XSD}decimal`,\n    boolean: `${XSD}boolean`,\n    double:  `${XSD}double`,\n    integer: `${XSD}integer`,\n    string:  `${XSD}string`,\n  },\n  rdf: {\n    type:       `${RDF}type`,\n    nil:        `${RDF}nil`,\n    first:      `${RDF}first`,\n    rest:       `${RDF}rest`,\n    langString: `${RDF}langString`,\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: `${SWAP}reify#forSome`,\n    forAll:  `${SWAP}reify#forAll`,\n  },\n  log: {\n    implies: `${SWAP}log#implies`,\n  },\n};\n","// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nconst escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nconst escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nconst illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nconst lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nconst invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (const key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    let input = this._input;\n    let currentLineLength = input.length;\n    while (true) {\n      // Count and skip whitespace lines\n      let whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (this._comments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          emitToken('comment', comment[1], '', this._line, whiteSpaceMatch[0].length);\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        currentLineLength = input.length;\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (this._comments && (comment = this._comment.exec(input)))\n            emitToken('comment', comment[1], '', this._line, input.length);\n          input = null;\n          emitToken('eof', '', '', this._line, 0);\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      const line = this._line, firstChar = input[0];\n      let type = '', value = '', prefix = '',\n          match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(`${input} `)))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(`${input} `))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(`${input} `)))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      const length = matchLength || match[0].length;\n      const token = emitToken(type, value, prefix, line, length);\n      this.previousToken = token;\n      this._previousMarker = type;\n\n      // Advance to next part to tokenize\n      input = input.substr(length, input.length);\n    }\n\n    // Emits the token through the callback\n    function emitToken(type, value, prefix, line, length) {\n      const start = input ? currentLineLength - input.length : currentLineLength;\n      const end = start + length;\n      const token = { type, value, prefix, line, start, end };\n      callback(null, token);\n      return token;\n    }\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    const err = new Error(`Unexpected \"${issue}\" on line ${this._line}.`);\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ### Strips off any starting UTF BOM mark.\n  _readStartingBom(input) {\n    return input.startsWith('\\ufeff') ? input.substr(1) : input;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = this._readStartingBom(input);\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => this._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        const tokens = [];\n        let error;\n        this._tokenizeToEnd((e, t) => e ? (error = e) : tokens.push(t), true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', data => {\n        if (this._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (this._pendingBuffer) {\n            data = Buffer.concat([this._pendingBuffer, data]);\n            this._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            this._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            // Only read a BOM at the start\n            if (typeof this._input === 'undefined')\n              this._input = this._readStartingBom(typeof data === 'string' ? data : data.toString());\n            else\n              this._input += data;\n            this._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', () => {\n        if (typeof this._input === 'string')\n          this._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n","// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri.value || iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  const prefixes = Object.create(null);\n  for (const prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      const cache = Object.create(null);\n      prefixes[prefix] = local => {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error(`Unknown prefix: ${prefix}`);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n","// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\n// eslint-disable-next-line prefer-const\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Implement hashCode for Immutable.js, since we implement `equals`\n  // https://immutable-js.com/docs/v4.0.0/ValueObject/#hashCode()\n  hashCode() {\n    return 0;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    const id = this.id;\n    let atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    const id = this.id, dtPos = id.lastIndexOf('\"') + 1;\n    const char = dtPos < id.length ? id[dtPos] : '';\n    // If \"^\" it follows, return the remaining substring\n    return char === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (char !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super(`_:${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super(`?${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    const endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return `_:${term.value}`;\n  case 'Variable':     return `?${term.value}`;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return `\"${term.value}\"${\n    term.language ? `@${term.language}` :\n      (term.datatype && term.datatype.value !== xsd.string ? `^^${term.datatype.value}` : '')}`;\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error(`Unexpected termType: ${term.termType}`);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this._subject   = subject;\n    this._predicate = predicate;\n    this._object    = object;\n    this._graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  get subject() {\n    return this._subject;\n  }\n\n  get predicate() {\n    return this._predicate;\n  }\n\n  get object() {\n    return this._object;\n  }\n\n  get graph() {\n    return this._graph;\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this._subject.toJSON(),\n      predicate: this._predicate.toJSON(),\n      object:    this._object.toJSON(),\n      graph:     this._graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this._subject.equals(other.subject)     &&\n                      this._predicate.equals(other.predicate) &&\n                      this._object.equals(other.object)       &&\n                      this._graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal(`\"${value}\"@${languageOrDataType.toLowerCase()}`);\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal(`\"${value}\"`) :\n    new Literal(`\"${value}\"^^${datatype}`);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n","// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    const format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = iri => { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      const fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    const n3Mode = this._n3Mode;\n    this._contextStack.push({\n      type,\n      subject, predicate, object, graph,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? `${this._graph.id.substr(2)}.` : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext(type, token) {\n    // Obtain the previous context\n    const context = this._contextStack.pop();\n    if (!context || context.type !== type)\n      return this._error(`Unexpected ${token.type}`, token);\n\n    // Restore the quad of the previous context\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n\n    // Restore N3 context settings\n    if (this._n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    let value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      const iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      const prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error(`Undefined prefix \"${token.prefix}:\"`, token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error(`Expected entity but got ${token.type}`, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    const type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error(`Unexpected ${type}`, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case '[':\n      if (this._n3Mode) {\n        // Start a new quad with a new blank node as subject\n        this._saveContext('blank', this._graph, this._subject,\n                          this._subject = this._blankNode(), null);\n        return this._readBlankNodeHead;\n      }\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error(`Expected graph but got ${token.type}`, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    const empty = this._predicate === null;\n    this._restoreContext('blank', token);\n    // If the blank node was the object, restore previous context and read punctuation\n    if (this._object !== null)\n      return this._getContextEndReader();\n    // If the blank node was the predicate, continue reading the object\n    else if (this._predicate !== null)\n      return this._readObject;\n    // If the blank node was the subject, continue reading the predicate\n    else\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    let item = null,                      // The item of the list\n        list = null,                      // The list itself\n        next = this._readListItem;        // The next function to execute\n    const previousList = this._subject,   // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1]; // The parent containing the current list\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext('list', token);\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      const datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext('formula', token);\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    let next, graph = this._graph;\n    const subject = this._subject, inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      const predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    let next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error(`Expected IRI to follow prefix \"${this._prefix}:\"`, token);\n    const prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    const iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    let entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error(`Unexpected ${token.type}`, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      const stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        const item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext('item', token);\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    let subject, predicate;\n    const object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    const subject = this._blankNode();\n    let predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error(`Expected >> to follow \"${this._object.id}\"`, token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext('<<', token);\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    const contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    const err = new Error(`${message} on line ${token.line}.`);\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    const length = iri.length;\n    let result = '', i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return `${result}/${iri.substr(i + 1)}`;\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : `b${blankNodePrefix++}_`;\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      const quads = [];\n      let error;\n      this._callback = (e, t) => { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(token => {\n        return this._readCallback = this._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, (error, token) => {\n      if (error !== null)\n        this._callback(error), this._callback = noop;\n      else if (this._readCallback)\n        this._readCallback = this._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  const namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n","// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._lineMode = false;\n      this._graph = DEFAULTGRAPH;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n      if (options.baseIRI) {\n        this._baseMatcher = new RegExp(`^${escapeRegex(options.baseIRI)\n            }${options.baseIRI.endsWith('/') ? '' : '[#?]'}`);\n        this._baseLength = options.baseIRI.length;\n      }\n    }\n    else {\n      this._lineMode = true;\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    let iri = entity.value;\n    // Use relative IRIs if requested and possible\n    if (this._baseMatcher && this._baseMatcher.test(iri))\n      iri = iri.substr(this._baseLength);\n    // Escape special characters\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n\n    // Write a language-tagged literal\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n\n    // Write dedicated literals per data type\n    if (this._lineMode) {\n      // Only abbreviate strings in N-Triples or N-Quads\n      if (literal.datatype.value === xsd.string)\n        return `\"${value}\"`;\n    }\n    else {\n      // Use common datatype abbreviations in Turtle or TriG\n      switch (literal.datatype.value) {\n      case xsd.string:\n        return `\"${value}\"`;\n      case xsd.boolean:\n        if (value === 'true' || value === 'false')\n          return value;\n        break;\n      case xsd.integer:\n        if (/^[+-]?\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.decimal:\n        if (/^[+-]?\\d*\\.\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.double:\n        if (/^[+-]?(?:\\d+\\.\\d*|\\.?\\d+)[eE][+-]?\\d+$/.test(value))\n          return value;\n        break;\n      }\n    }\n\n    // Write a regular datatyped literal\n    return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = escapeRegex(IRIlist, /[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([_a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\nfunction escapeRegex(regex) {\n  return regex.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n}\n","// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    let size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    const graphs = this._graphs;\n    let subjects, subject;\n    for (const graphKey in graphs)\n      for (const subjectKey in (subjects = graphs[graphKey].subjects))\n        for (const predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {});\n    const index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0], index2 = index1[key1];\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) return;\n    delete index1[key1];\n    for (const key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graphId` will be the graph of the created quads.\n  *_findInIndex(index0, key0, key1, key2, name0, name1, name2, graphId) {\n    let tmp, index1, index2;\n    const entityKeys = this._entities;\n    const graph = termFromId(graphId, this._factory);\n    const parts = { subject: null, predicate: null, object: null };\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        parts[name0] = termFromId(entityKeys[value0], this._factory);\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            parts[name1] = termFromId(entityKeys[value1], this._factory);\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              yield this._factory.quad(parts.subject, parts.predicate, parts.object, graph);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (const key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    let index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    let key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    let index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    let count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    const graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    const uniqueIds = Object.create(null);\n    return id => {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(this._entities[id], this._factory));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `add` adds the specified quad to the dataset.\n  // Returns the dataset instance it was called on.\n  // Existing quads, as defined in Quad.equals, will be ignored.\n  add(quad) {\n    this.addQuad(quad);\n    return this;\n  }\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids;\n    const entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    const changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `delete` removes the specified quad from the dataset.\n  // Returns the dataset instance it was called on.\n  delete(quad) {\n    this.removeQuad(quad);\n    return this;\n  }\n\n  // ### `has` determines whether a dataset includes a certain quad or quad pattern.\n  has(subjectOrQuad, predicate, object, graph) {\n    if (subjectOrQuad && subjectOrQuad.subject)\n      ({ subject: subjectOrQuad, predicate, object, graph } = subjectOrQuad);\n    return !this.readQuads(subjectOrQuad, predicate, object, graph).next().done;\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    stream.on('data', quad => { this.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids, graphs = this._graphs;\n    let graphItem, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    stream.on('data', quad => { this.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    const stream = new Readable({ objectMode: true });\n\n    stream._read = () => {\n      for (const quad of this.readQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return this.remove(stream);\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    return [...this.readQuads(subject, predicate, object, graph)];\n  }\n\n  // ### `readQuads` returns an generator of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  *readQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            yield* this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            yield* this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          yield* this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          yield* this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          yield* this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId);\n      }\n    }\n  }\n\n  // ### `match` returns a new dataset that is comprised of all quads in the current instance matching the given arguments.\n  // The logic described in Quad Matching is applied for each quad in this dataset to check if it should be included in the output dataset.\n  // Note: This method always returns a new DatasetCore, even if that dataset contains no quads.\n  // Note: Since a DatasetCore is an unordered set, the order of the quads within the returned sequence is arbitrary.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  // For backwards compatibility, the object return also implements the Readable stream interface.\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this, subject, predicate, object, graph);\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let count = 0, content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(quad => {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    let some = false;\n    const every = !this.some(quad => {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    for (const quad of this.readQuads(subject, predicate, object, graph))\n      if (callback(quad))\n        return true;\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    const results = [];\n    this.forSubjects(s => { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    const results = [];\n    this.forPredicates(p => { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    const results = [];\n    this.forObjects(o => { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    const results = [];\n    this.forGraphs(g => { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (const graph in this._graphs) {\n      this.some(quad => {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    let name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = `_:${suggestedName}`, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = `_:b${this._blankNodeIndex++}`; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    const lists = {}; // has scalar keys so could be a simple Object\n    const onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    const tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    const toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      const items = [];             // the members found as objects of rdf:first quads\n      let malformed = false;      // signals whether the current list is malformed\n      let head;                   // the head of the list (_:b1 in above example)\n      let headPos;                // set to subject or object when head is set\n      const graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      let current = tailQuad.subject;\n      while (current && !malformed) {\n        const objectQuads = this.getQuads(null, null, current, null);\n        const subjectQuads = this.getQuads(current, null, null, null);\n        let quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (let i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (let i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n\n  // ### Store is an iterable.\n  // Can be used where iterables are expected: for...of loops, array spread operator,\n  // `yield*`, and destructuring assignment (order is not guaranteed).\n  *[Symbol.iterator]() {\n    yield* this.readQuads();\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n\n/**\n * A class that implements both DatasetCore and Readable.\n */\nclass DatasetCoreAndReadableStream extends Readable {\n  constructor(n3Store, subject, predicate, object, graph) {\n    super({ objectMode: true });\n    Object.assign(this, { n3Store, subject, predicate, object, graph });\n  }\n\n  get filtered() {\n    if (!this._filtered) {\n      const { n3Store, graph, object, predicate, subject } = this;\n      const newStore = this._filtered = new N3Store({ factory: n3Store._factory });\n      for (const quad of n3Store.readQuads(subject, predicate, object, graph))\n        newStore.addQuad(quad);\n    }\n    return this._filtered;\n  }\n\n  get size() {\n    return this.filtered.size;\n  }\n\n  _read() {\n    for (const quad of this)\n      this.push(quad);\n    this.push(null);\n  }\n\n  add(quad) {\n    return this.filtered.add(quad);\n  }\n\n  delete(quad) {\n    return this.filtered.delete(quad);\n  }\n\n  has(quad) {\n    return this.filtered.has(quad);\n  }\n\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this.filtered, subject, predicate, object, graph);\n  }\n\n  *[Symbol.iterator]() {\n    yield* this._filtered || this.n3Store.readQuads(this.subject, this.predicate, this.object, this.graph);\n  }\n}\n","// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    const parser = new N3Parser(options);\n    let onData, onEnd;\n    parser.parse({\n      on: (event, callback) => {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      (error, quad) => { error && this.emit('error', error) || quad && this.push(quad); },\n      // Emit prefixes through the `prefix` event\n      (prefix, uri) => { this.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = (chunk, encoding, done) => { onData(chunk); done(); };\n    this._flush = done => { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    stream.on('data',  chunk => { this.write(chunk); });\n    stream.on('end',   ()      => { this.end(); });\n    stream.on('error', error => { this.emit('error', error); });\n    return this;\n  }\n}\n","// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8', writableObjectMode: true });\n\n    // Set up writer with a dummy stream object\n    const writer = this._writer = new N3Writer({\n      write: (quad, encoding, callback) => { this.push(quad); callback && callback(); },\n      end: callback => { this.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = (quad, encoding, done) => { writer.addQuad(quad, done); };\n    this._flush = done => { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    stream.on('data',   quad => { this.write(quad); });\n    stream.on('end',    () => { this.end(); });\n    stream.on('error',  error => { this.emit('error', error); });\n    stream.on('prefix', (prefix, iri) => { this._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n","import Lexer from './N3Lexer';\nimport Parser from './N3Parser';\nimport Writer from './N3Writer';\nimport Store from './N3Store';\nimport StreamParser from './N3StreamParser';\nimport StreamWriter from './N3StreamWriter';\nimport * as Util from './N3Util';\n\nimport {\n  default as DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n} from './N3DataFactory';\n\n// Named exports\nexport {\n  Lexer,\n  Parser,\n  Writer,\n  Store,\n  StreamParser,\n  StreamWriter,\n  Util,\n\n  DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n};\n\n// Export all named exports as a default object for backward compatibility\nexport default {\n  Lexer,\n  Parser,\n  Writer,\n  Store,\n  StreamParser,\n  StreamWriter,\n  Util,\n\n  DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n};\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","const { finished, Readable } = require('readable-stream')\n\nfunction nextLoop () {\n  return new Promise(resolve => setTimeout(resolve, 0))\n}\n\nclass ReadableToReadable extends Readable {\n  constructor (input, { end = true, map, ...args } = {}) {\n    super({\n      read: ReadableToReadable.readFrom(input, { end, map }),\n      ...args\n    })\n  }\n\n  static readFrom (input, { end = true, map = v => v } = {}) {\n    let done = false\n\n    finished(input, () => {\n      done = true\n    })\n\n    const read = async function () {\n      while (true) {\n        const chunk = input.read()\n\n        if (!chunk) {\n          if (done && end) {\n            this.push(null)\n          }\n\n          if (done) {\n            return true\n          }\n\n          await nextLoop()\n        } else {\n          if (!this.push(map(chunk))) {\n            return false\n          }\n        }\n      }\n    }\n\n    return read\n  }\n}\n\nmodule.exports = ReadableToReadable\n"],"names":["ParserStream","Sink","Parser","constructor","options","super","module","exports","N3","rdf","finished","ReadableToReadable","input","baseIRI","factory","parser","StreamParser","objectMode","on","prefix","term","this","emit","err","destroy","end","pipe","Impl","import","output","Object","assign","readable","AbortError","codes","eos","ERR_INVALID_ARG_TYPE","validateAbortSignal","signal","name","isNodeStream","obj","addAbortSignal","stream","addAbortSignalNoValidate","onAbort","undefined","cause","reason","aborted","addEventListener","removeEventListener","StringPrototypeSlice","SymbolIterator","TypedArrayPrototypeSet","Uint8Array","Buffer","inspect","head","tail","length","push","v","entry","data","next","unshift","shift","ret","clear","join","s","p","concat","n","alloc","allocUnsafe","i","consume","hasStrings","slice","_getString","_getBuffer","first","c","str","retLen","buf","buffer","byteOffset","Symbol","for","_","depth","customInspect","pipeline","Duplex","destroyer","isReadable","isWritable","ERR_INVALID_ARG_VALUE","ERR_MISSING_ARGS","streams","from","orgStreams","idx","ondrain","onfinish","onreadable","onclose","d","onfinished","cb","writable","writableObjectMode","readableObjectMode","_write","chunk","encoding","callback","write","_final","_read","read","_destroy","process","aggregateTwoErrors","ERR_MULTIPLE_CALLBACK","kDestroyed","isDestroyed","isFinished","isServerRequest","kDestroy","kConstruct","checkError","w","r","stack","errored","_readableState","_writableState","destroyed","constructed","once","er","self","called","onDestroy","closed","nextTick","emitErrorCloseNT","emitCloseNT","emitErrorNT","closeEmitted","emitClose","errorEmitted","undestroy","reading","ended","endEmitted","finalCalled","prefinished","ending","errorOrDestroy","sync","autoDestroy","construct","_construct","listenerCount","constructNT","onConstruct","emitConstructNT","isRequest","setHeader","abort","emitCloseLegacy","emitErrorCloseLegacy","socket","req","close","ObjectDefineProperties","ObjectGetOwnPropertyDescriptor","ObjectKeys","ObjectSetPrototypeOf","Readable","Writable","prototype","keys","method","call","allowHalfOpen","webStreamsAdapters","duplexify","lazyWebStreams","__proto__","writableHighWaterMark","writableBuffer","writableLength","writableFinished","writableCorked","writableEnded","writableNeedDrain","get","set","value","fromWeb","pair","newStreamDuplexFromReadableWritablePair","toWeb","duplex","newReadableWritablePairFromDuplex","body","bufferModule","isIterable","isReadableNodeStream","isWritableNodeStream","isDuplexNodeStream","ERR_INVALID_RETURN_VALUE","createDeferredPromise","Blob","globalThis","isBlob","b","AbortController","FunctionPrototypeCall","Duplexify","fromAsyncGen","fn","promise","resolve","ac","_promise","done","_resolve","final","_duplexify","wrap","then","val","async","arrayBuffer","ERR_STREAM_PREMATURE_CLOSE","kEmptyObject","validateFunction","validateObject","Promise","isClosed","isReadableFinished","isReadableErrored","isWritableFinished","isWritableErrored","willEmitClose","_willEmitClose","nop","_options$readable","_options$writable","arguments","wState","rState","onlegacyfinish","readableFinished","onend","onerror","onrequest","error","cleanup","removeListener","endCallback","originalCallback","args","apply","opts","reject","PromisePrototypeThen","SymbolAsyncIterator","ERR_STREAM_NULL_VALUES","iterable","iterator","isAsync","highWaterMark","hadError","hasThrow","throw","return","res","e","ArrayIsArray","EventEmitter","EE","Stream","prependListener","emitter","event","_events","dest","source","ondata","pause","resume","_isStdio","didOnEnd","ERR_OUT_OF_RANGE","validateInteger","kWeakHandler","ArrayPrototypePush","MathFloor","Number","NumberIsNaN","PromiseReject","kEmpty","kEof","map","concurrency","_options$signal","_options$signal2","queue","signalOpt","onDone","pump","_val","catch","_options$signal3","asIndexedPairs","index","_options$signal4","some","unused","filter","every","find","result","forEach","forEachFn","filterFn","ReduceAwareErrMissingArgs","message","reduce","reducer","initialValue","_options$signal5","hasInitialValue","gotAnyItemFromStream","_options$signal6","toArray","_options$signal7","flatMap","values","toIntegerOrInfinity","number","drop","_options$signal8","_options$signal9","take","_options$signal10","_options$signal11","streamReturningOperators","promiseReturningOperators","PassThrough","Transform","_transform","destroyImpl","ERR_STREAM_DESTROYED","writing","popCallback","pop","makeAsyncIterable","fromReadable","finish","onresolve","wait","off","pipelineImpl","outerSignal","lastStreamCleanup","finishImpl","destroys","finishCount","code","isLastStream","onError","_ret","pt","src","dst","ArrayPrototypeIndexOf","NumberIsInteger","NumberParseInt","SafeSet","ReadableState","debug","BufferList","getHighWaterMark","getDefaultHighWaterMark","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kPaused","StringDecoder","isDuplex","pipes","flowing","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrainWriters","multiAwaitDrain","readingMore","dataEmitted","decoder","maybeReadMore","readableAddChunk","addToFront","state","toString","_isUint8Array","_uint8ArrayToBuffer","onEofChunk","addChunk","emitReadable","_undestroy","captureRejectionSymbol","isPaused","setEncoding","enc","content","MAX_HWM","computeNewHighWaterMark","howMuchToRead","emitReadable_","flow","maybeReadMore_","len","pipeOnDrain","size","delete","updateReadableListening","nReadingNextTick","resume_","streamToAsyncIterator","iter","createAsyncIterator","destroyOnReturn","fromList","endReadable","endReadableNT","endWritableNT","NaN","nOrig","doRead","pipeOpts","doEnd","stdout","stderr","endFn","unpipe","onunpipe","unpipeInfo","hasUnpiped","cleanedUp","needDrain","includes","add","dests","splice","ev","addListener","removeAllListeners","paused","streamKeys","j","bind","readableDidRead","enumerable","readableAborted","readableHighWaterMark","readableBuffer","readableFlowing","readableLength","readableEncoding","readableEnded","pipesCount","_fromList","readableStream","newStreamReadableFromReadableStream","streamReadable","newReadableStreamFromStreamReadable","_ref","_src$readableObjectMo","highWaterMarkFrom","duplexKey","hwm","kCallback","transform","flush","_flush","prefinish","kIsErrored","kIsReadable","kIsDisturbed","strict","_obj$_readableState","_obj$_writableState","isWritableEnded","isReadableEnded","_stream$_writableStat","_stream$_writableStat2","writableErrored","_stream$_readableStat","_stream$_readableStat2","readableErrored","_closed","isOutgoingMessage","_defaultKeepAlive","_removedConnection","_removedContLen","isServerResponse","_sent100","_stream$req","_consuming","_dumped","upgradeOrConnect","isDisturbed","_stream$kIsDisturbed","isErrored","_ref2","_ref3","_ref4","_ref5","_stream$kIsErrored","_stream$_readableStat3","_stream$_writableStat3","_stream$_readableStat4","_stream$_writableStat4","ArrayPrototypeSlice","Error","FunctionPrototypeSymbolHasInstance","ObjectDefineProperty","StringPrototypeToLowerCase","SymbolHasInstance","WritableState","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_ALREADY_FINISHED","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","kOnFinished","noDecode","decodeStrings","corked","bufferProcessing","onwrite","writecb","writelen","afterWriteTickInfo","resetBuffer","pendingcb","buffered","bufferedIndex","allBuffers","allNoop","writev","_writev","clearBuffer","finishMaybe","isEncoding","writeOrBuffer","doWrite","onwriteError","errorBuffer","count","afterWriteTick","afterWrite","_state$errored","onfinishCallbacks","_state$errored2","bufferedLength","chunks","needFinish","callFinal","onFinish","getBuffer","object","cork","uncork","setDefaultEncoding","writableAborted","writableStream","newStreamWritableFromWritableStream","streamWritable","newWritableStreamFromStreamWritable","ArrayPrototypeIncludes","ArrayPrototypeJoin","ArrayPrototypeMap","NumberMAX_SAFE_INTEGER","NumberMIN_SAFE_INTEGER","ObjectPrototypeHasOwnProperty","RegExpPrototypeExec","String","StringPrototypeToUpperCase","StringPrototypeTrim","hideStackFrames","ERR_SOCKET_BAD_PORT","ERR_UNKNOWN_SIGNAL","normalizeEncoding","isAsyncFunction","isArrayBufferView","signals","isInt32","isUint32","octalReg","modeDesc","parseFileMode","def","validateUint32","min","max","validateInt32","positive","validateString","validateNumber","validateOneOf","oneOf","allowed","validateBoolean","getOwnPropertyValueOrDefault","key","defaultValue","allowArray","allowFunction","nullable","validateArray","minLength","validateSignalName","validateBuffer","validateEncoding","normalizedEncoding","validatePort","port","allowZero","validatePlainFunction","validateUndefined","validateUnion","union","CustomStream","promises","originalDestroy","compose","defineProperty","configurable","format","AggregateError","CustomAggregateError","kIsNodeError","kTypes","classRegExp","nodeInternalPrefix","assert","ERR_INTERNAL_ASSERTION","addNumericalSeparator","start","getMessage","msg","expectedLength","match","E","Base","NodeError","defineProperties","hidden","innerError","outerError","Array","isArray","errors","expected","actual","endsWith","types","instances","other","toLowerCase","test","pos","indexOf","last","_actual$constructor","inspected","colors","TypeError","type","_value$constructor","a","range","received","isInteger","Math","abs","RangeError","el","sep","ArrayPrototypePop","thisArgs","instance","Function","hasInstance","floor","isNaN","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","parseInt","props","prop","getOwnPropertyDescriptor","target","proto","setPrototypeOf","PromisePrototypeCatch","thenFn","catchFn","ReflectApply","Reflect","RegExpPrototypeTest","Set","toUpperCase","trim","asyncIterator","AsyncFunction","getPrototypeOf","freeze","rej","promisify","debuglog","replace","_unused","replacement","toFixed","JSON","stringify","ctor","is","arr","ArrayBuffer","isView","custom","customPromisify","ERR_ILLEGAL_CONSTRUCTOR","utils","op","byteLength","pl","lastArg","RDF","XSD","SWAP","xsd","decimal","boolean","double","integer","string","nil","rest","langString","owl","sameAs","forSome","forAll","log","implies","escapeSequence","escapeReplacements","illegalIriChars","lineModeRegExps","_iri","_unescapedIri","_simpleQuotedString","_langcode","_blank","_newline","_comment","_whitespace","_endOfFile","invalidRegExp","N3Lexer","_simpleApostropheString","_prefix","_prefixed","_variable","_number","_boolean","_keyword","_sparqlKeyword","_shortPredicates","_lineMode","lineMode","_n3Mode","RegExp","n3","_comments","comments","_literalClosingPos","_tokenizeToEnd","inputFinished","_input","currentLineLength","whiteSpaceMatch","comment","exec","emitToken","_line","substr","line","firstChar","matchLength","inconclusive","_previousMarker","_unescape","reportSyntaxError","_parseLiteral","token","previousToken","_syntaxError","item","invalid","replaced","sequence","unicode4","unicode8","escapedChar","fromCharCode","charCode","opening","openingLength","closingPos","backslashCount","raw","substring","lines","split","issue","context","_readStartingBom","startsWith","tokenize","tokens","t","_pendingBuffer","isNamedNode","termType","isBlankNode","isLiteral","isVariable","isDefaultGraph","inDefaultGraph","quad","graph","iri","prefixes","defaultPrefixes","create","processPrefix","cache","local","namedNode","N3DataFactory","DEFAULTGRAPH","_blankNodeCounter","escapedLiteral","quadId","DataFactory","blankNode","variable","literal","defaultGraph","triple","Term","id","equals","hashCode","toJSON","NamedNode","Literal","lastIndexOf","language","atPos","datatype","datatypeString","dtPos","char","BlankNode","Variable","DefaultGraph","termFromId","endPos","components","unescapeQuotes","termToId","escapeQuotes","subject","predicate","Quad","_subject","_predicate","_object","_graph","quoted","languageOrDataType","isFinite","blankNodePrefix","N3Parser","_contextStack","_setBase","initDataFactory","isTurtle","isTriG","isNTriples","isNQuads","isN3","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_supportsRDFStar","_resolveRelativeIRI","_blankNodePrefix","_lexer","lexer","_explicitQuantifiers","explicitQuantifiers","static","fragmentPos","_base","_basePath","_baseRoot","_baseScheme","_saveContext","n3Mode","inverse","_inversePredicate","blankPrefix","_prefixes","quantified","_quantified","_restoreContext","_error","_readInTopContext","_callback","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","_readEntity","quantifier","_resolveIRI","_namedNode","_blankNode","_readBlankNodeHead","RDF_NIL","_readListItem","_readPunctuation","N3_FORSOME","_quantifier","_readQuantifierList","N3_FORALL","_literalValue","_completeSubjectLiteral","_literal","_getPathReader","ABBREVIATIONS","_readBlankNodeTail","_readObject","_readDataTypeOrLang","_getContextEndReader","_readGraph","_readBlankNodePunctuation","_emit","empty","_readPredicateAfterBlank","list","previousList","parent","RDF_FIRST","_readListItemDataTypeOrLang","RDF_REST","_completeObjectLiteral","_completeLiteral","listItem","completed","_readCallback","_readFormulaTail","inversePredicate","_readQuadPunctuation","_readPrefixIRI","prefixNode","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","entity","QUANTIFIERS_GRAPH","_readQuantifierPunctuation","afterPath","_afterPath","_readPath","_readForwardPath","_readBackwardPath","_readRDFStarTailOrGraph","_readRDFStarTail","_quad","contextStack","noop","_removeDotSegments","pathStart","segmentStart","parse","quadCallback","prefixCallback","quads","escapeAll","escapedCharacters","SerializedTerm","N3Writer","outputStream","_prefixRegex","_lists","lists","_outputStream","_endStream","_writeQuad","_writeQuadLine","_prefixIRIs","addPrefixes","_baseMatcher","escapeRegex","_baseLength","_inDefaultGraph","_encodeIriOrBlank","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","quadToString","quadsToString","_encodeQuad","characterReplacer","prefixMatch","_encodeLiteral","_blockedWrite","addQuad","addQuads","addPrefix","hasPrefixes","IRIlist","prefixList","prefixIRI","blank","child","children","contents","elements","singleDone","character","charCodeAt","regex","N3Store","_size","_graphs","_id","_ids","_entities","_blankNodeIndex","_factory","graphs","subjects","graphKey","subjectKey","predicateKey","_addToIndex","index0","key0","key1","key2","index1","index2","existed","_removeFromIndex","name0","name1","name2","graphId","tmp","entityKeys","parts","value0","value1","l","_loop","_loopByKey0","_loopByKey1","_loopBy2Keys","_countInIndex","_getGraphs","isString","_uniqueEntities","uniqueIds","graphItem","predicates","objects","ids","entities","changed","removeQuad","has","subjectOrQuad","readQuads","removeQuads","remove","removeMatches","deleteGraph","getQuads","subjectId","predicateId","objectId","_findInIndex","DatasetCoreAndReadableStream","countQuads","getSubjects","results","forSubjects","getPredicates","forPredicates","getObjects","forObjects","o","getGraphs","forGraphs","g","createBlankNode","suggestedName","extractLists","ignoreErrors","node","tails","toRemove","tailQuad","items","headPos","malformed","current","objectQuads","subjectQuads","n3Store","filtered","_filtered","newStore","N3StreamParser","onData","onEnd","uri","N3StreamWriter","writer","_writer","Lexer","Writer","Store","StreamWriter","Util","Triple","queueMicrotask","window","setTimeout","nextLoop","readFrom"],"sourceRoot":""}